{
  "address": "0x683d9CDD3239E0e01E8dC6315fA50AD92aB71D2d",
  "abi": [
    {
      "inputs": [],
      "name": "FeeTooHigh",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "MaxAuctionLengthOutOfBounds",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "MaxReserveFactorTooLow",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "MinAuctionLengthOutOfBounds",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "MinBidIncreaseOutOfBounds",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "MinReserveFactorTooHigh",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "MinVotePercentageTooHigh",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "MultiplierTooLow",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "Paused",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "Unauthorized",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "ZeroAddress",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "governanceFee",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "maxCuratorFee",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "flashLoanFee",
          "type": "uint256"
        }
      ],
      "name": "FactoryFeesUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "maxAuctionLength",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "minAuctionLength",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "minReserveFactor",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "maxReserveFactor",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "minBidIncrease",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "minVotePercentage",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "liquidityThreshold",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "instantBuyMultiplier",
          "type": "uint256"
        }
      ],
      "name": "FactoryThresholdsUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "target",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "excluded",
          "type": "bool"
        }
      ],
      "name": "FeeExclusionUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint8",
          "name": "version",
          "type": "uint8"
        }
      ],
      "name": "Initialized",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "addr",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "isGuardian",
          "type": "bool"
        }
      ],
      "name": "SetIsGuardian",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "lockId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "paused",
          "type": "bool"
        }
      ],
      "name": "SetPaused",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "childImplementation",
          "type": "address"
        }
      ],
      "name": "Upgraded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "vaultId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "curator",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "vaultAddress",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "assetAddress",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "supply",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "listPrice",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "name",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "symbol",
          "type": "string"
        }
      ],
      "name": "VaultCreated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "vaultAddress",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "curator",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "supply",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "listPrice",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "fee",
          "type": "uint256"
        }
      ],
      "name": "VaultCurated",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "childImplementation_",
          "type": "address"
        }
      ],
      "name": "__BeaconUpgradeable__init",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_vaultManager",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_fnftSingle",
          "type": "address"
        }
      ],
      "name": "__FNFTSingleFactory_init",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "childImplementation",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_nft",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_supply",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_listPrice",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_fee",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "_name",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_symbol",
          "type": "string"
        }
      ],
      "name": "createVault",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "flashLoanFee",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "governanceFee",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "instantBuyMultiplier",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "isGuardian",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "isPaused",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "liquidityThreshold",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "maxAuctionLength",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "maxCuratorFee",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "maxReserveFactor",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "minAuctionLength",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "minBidIncrease",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "minReserveFactor",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "minVotePercentage",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "lockId",
          "type": "uint256"
        }
      ],
      "name": "onlyOwnerIfPaused",
      "outputs": [],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "lockId",
          "type": "uint256"
        }
      ],
      "name": "pause",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_governanceFee",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_maxCuratorFee",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_flashLoanFee",
          "type": "uint256"
        }
      ],
      "name": "setFactoryFees",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_maxAuctionLength",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_minAuctionLength",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_minReserveFactor",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_maxReserveFactor",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_minBidIncrease",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_minVotePercentage",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_liquidityThreshold",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_instantBuyMultiplier",
          "type": "uint256"
        }
      ],
      "name": "setFactoryThresholds",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_address",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "_isGuardian",
          "type": "bool"
        }
      ],
      "name": "setIsGuardian",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "lockId",
          "type": "uint256"
        }
      ],
      "name": "unpause",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newChildImplementation",
          "type": "address"
        }
      ],
      "name": "upgradeChildTo",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "vaultManager",
      "outputs": [
        {
          "internalType": "contract IVaultManager",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "transactionHash": "0xb0e4fc2faa82b34290a3211a7c9c10ff66bbdd23162be44c3038c4b6d117ea8a",
  "receipt": {
    "to": null,
    "from": "0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266",
    "contractAddress": "0x683d9CDD3239E0e01E8dC6315fA50AD92aB71D2d",
    "transactionIndex": 0,
    "gasUsed": "1752552",
    "logsBloom": "0x
    "blockHash": "0x6b1a9b82b2097dc625370594ff9df4e4db74449ecccd7b326a37c7361cd85ca5",
    "transactionHash": "0xb0e4fc2faa82b34290a3211a7c9c10ff66bbdd23162be44c3038c4b6d117ea8a",
    "logs": [],
    "blockNumber": 3693484,
    "cumulativeGasUsed": "1752552",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "numDeployments": 1,
  "solcInputHash": "961fec123a75984f6857e077cf799290",
  "metadata": "{\"compiler\":{\"version\":\"0.8.13+commit.abaa5c0e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"FeeTooHigh\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MaxAuctionLengthOutOfBounds\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MaxReserveFactorTooLow\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MinAuctionLengthOutOfBounds\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MinBidIncreaseOutOfBounds\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MinReserveFactorTooHigh\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MinVotePercentageTooHigh\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MultiplierTooLow\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Paused\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Unauthorized\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ZeroAddress\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"governanceFee\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"maxCuratorFee\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"flashLoanFee\",\"type\":\"uint256\"}],\"name\":\"FactoryFeesUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"maxAuctionLength\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"minAuctionLength\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"minReserveFactor\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"maxReserveFactor\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"minBidIncrease\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"minVotePercentage\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"liquidityThreshold\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"instantBuyMultiplier\",\"type\":\"uint256\"}],\"name\":\"FactoryThresholdsUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"excluded\",\"type\":\"bool\"}],\"name\":\"FeeExclusionUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"isGuardian\",\"type\":\"bool\"}],\"name\":\"SetIsGuardian\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"lockId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"paused\",\"type\":\"bool\"}],\"name\":\"SetPaused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"childImplementation\",\"type\":\"address\"}],\"name\":\"Upgraded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"vaultId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"curator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"vaultAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"assetAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"supply\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"listPrice\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"}],\"name\":\"VaultCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"vaultAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"curator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"supply\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"listPrice\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"fee\",\"type\":\"uint256\"}],\"name\":\"VaultCurated\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"childImplementation_\",\"type\":\"address\"}],\"name\":\"__BeaconUpgradeable__init\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_vaultManager\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_fnftSingle\",\"type\":\"address\"}],\"name\":\"__FNFTSingleFactory_init\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"childImplementation\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_nft\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_supply\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_listPrice\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_fee\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_symbol\",\"type\":\"string\"}],\"name\":\"createVault\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"flashLoanFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"governanceFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"instantBuyMultiplier\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"isGuardian\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"isPaused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"liquidityThreshold\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"maxAuctionLength\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"maxCuratorFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"maxReserveFactor\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"minAuctionLength\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"minBidIncrease\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"minReserveFactor\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"minVotePercentage\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"lockId\",\"type\":\"uint256\"}],\"name\":\"onlyOwnerIfPaused\",\"outputs\":[],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"lockId\",\"type\":\"uint256\"}],\"name\":\"pause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_governanceFee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_maxCuratorFee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_flashLoanFee\",\"type\":\"uint256\"}],\"name\":\"setFactoryFees\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_maxAuctionLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_minAuctionLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_minReserveFactor\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_maxReserveFactor\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_minBidIncrease\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_minVotePercentage\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_liquidityThreshold\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_instantBuyMultiplier\",\"type\":\"uint256\"}],\"name\":\"setFactoryThresholds\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_isGuardian\",\"type\":\"bool\"}],\"name\":\"setIsGuardian\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"lockId\",\"type\":\"uint256\"}],\"name\":\"unpause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newChildImplementation\",\"type\":\"address\"}],\"name\":\"upgradeChildTo\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"vaultManager\",\"outputs\":[{\"internalType\":\"contract IVaultManager\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"childImplementation()\":{\"details\":\"Returns the current child implementation address.\"},\"createVault(address,uint256,uint256,uint256,uint256,string,string)\":{\"params\":{\"_fee\":\"curator fee\",\"_listPrice\":\"the initial price of the NFT\",\"_name\":\"the desired name of the vault\",\"_nft\":\"the ERC721 token address\",\"_supply\":\"vault token supply\",\"_symbol\":\"the desired symbol of the vault\",\"_tokenId\":\"the uint256 id of the token\"},\"returns\":{\"_0\":\"vaultId\"}},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"upgradeChildTo(address)\":{\"details\":\"Upgrades the beacon to a new implementation. Emits an {Upgraded} event. Requirements: - msg.sender must be the owner of the contract. - `newChildImplementation` must be a contract.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"createVault(address,uint256,uint256,uint256,uint256,string,string)\":{\"notice\":\"the function to mint a fnftSingle\"},\"flashLoanFee()\":{\"notice\":\"flash loan fee basis point\"},\"governanceFee()\":{\"notice\":\"governance fee max\"},\"instantBuyMultiplier()\":{\"notice\":\"instant buy allowed if bid > MC * instantBuyMultiplier\"},\"liquidityThreshold()\":{\"notice\":\"minimum size of FNFT-ETH LP pool for TWAP to take effect\"},\"maxAuctionLength()\":{\"notice\":\"the maximum auction length\"},\"maxCuratorFee()\":{\"notice\":\"max curator fee\"},\"maxReserveFactor()\":{\"notice\":\"the max % increase over the initial\"},\"minAuctionLength()\":{\"notice\":\"the minimum auction length\"},\"minBidIncrease()\":{\"notice\":\"the % bid increase required for a new bid\"},\"minReserveFactor()\":{\"notice\":\"the max % decrease from the initial\"},\"minVotePercentage()\":{\"notice\":\"the % of tokens required to be voting for an auction to start\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/contracts/FNFTSingleFactory.sol\":\"FNFTSingleFactory\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (access/Ownable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/ContextUpgradeable.sol\\\";\\nimport \\\"../proxy/utils/Initializable.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract OwnableUpgradeable is Initializable, ContextUpgradeable {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    function __Ownable_init() internal onlyInitializing {\\n        __Ownable_init_unchained();\\n    }\\n\\n    function __Ownable_init_unchained() internal onlyInitializing {\\n        _transferOwnership(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n        _;\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby removing any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n\\n    /**\\n     * @dev This empty reserved space is put in place to allow future versions to add new\\n     * variables without shifting down storage in the inheritance chain.\\n     * See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\\n     */\\n    uint256[49] private __gap;\\n}\\n\",\"keccak256\":\"0x652fee292f698d8dba81bf287cb71f1682f6483b67ebe601a5f7387dcfc30b34\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.6.0) (proxy/utils/Initializable.sol)\\n\\npragma solidity ^0.8.2;\\n\\nimport \\\"../../utils/AddressUpgradeable.sol\\\";\\n\\n/**\\n * @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\\n * behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\\n * external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\\n * function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\\n *\\n * The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\\n * reused. This mechanism prevents re-execution of each \\\"step\\\" but allows the creation of new initialization steps in\\n * case an upgrade adds a module that needs to be initialized.\\n *\\n * For example:\\n *\\n * [.hljs-theme-light.nopadding]\\n * ```\\n * contract MyToken is ERC20Upgradeable {\\n *     function initialize() initializer public {\\n *         __ERC20_init(\\\"MyToken\\\", \\\"MTK\\\");\\n *     }\\n * }\\n * contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\\n *     function initializeV2() reinitializer(2) public {\\n *         __ERC20Permit_init(\\\"MyToken\\\");\\n *     }\\n * }\\n * ```\\n *\\n * TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\\n * possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\\n *\\n * CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\\n * that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\\n *\\n * [CAUTION]\\n * ====\\n * Avoid leaving a contract uninitialized.\\n *\\n * An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\\n * contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\\n * the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\\n *\\n * [.hljs-theme-light.nopadding]\\n * ```\\n * /// @custom:oz-upgrades-unsafe-allow constructor\\n * constructor() {\\n *     _disableInitializers();\\n * }\\n * ```\\n * ====\\n */\\nabstract contract Initializable {\\n    /**\\n     * @dev Indicates that the contract has been initialized.\\n     * @custom:oz-retyped-from bool\\n     */\\n    uint8 private _initialized;\\n\\n    /**\\n     * @dev Indicates that the contract is in the process of being initialized.\\n     */\\n    bool private _initializing;\\n\\n    /**\\n     * @dev Triggered when the contract has been initialized or reinitialized.\\n     */\\n    event Initialized(uint8 version);\\n\\n    /**\\n     * @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\\n     * `onlyInitializing` functions can be used to initialize parent contracts. Equivalent to `reinitializer(1)`.\\n     */\\n    modifier initializer() {\\n        bool isTopLevelCall = _setInitializedVersion(1);\\n        if (isTopLevelCall) {\\n            _initializing = true;\\n        }\\n        _;\\n        if (isTopLevelCall) {\\n            _initializing = false;\\n            emit Initialized(1);\\n        }\\n    }\\n\\n    /**\\n     * @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\\n     * contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\\n     * used to initialize parent contracts.\\n     *\\n     * `initializer` is equivalent to `reinitializer(1)`, so a reinitializer may be used after the original\\n     * initialization step. This is essential to configure modules that are added through upgrades and that require\\n     * initialization.\\n     *\\n     * Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\\n     * a contract, executing them in the right order is up to the developer or operator.\\n     */\\n    modifier reinitializer(uint8 version) {\\n        bool isTopLevelCall = _setInitializedVersion(version);\\n        if (isTopLevelCall) {\\n            _initializing = true;\\n        }\\n        _;\\n        if (isTopLevelCall) {\\n            _initializing = false;\\n            emit Initialized(version);\\n        }\\n    }\\n\\n    /**\\n     * @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\\n     * {initializer} and {reinitializer} modifiers, directly or indirectly.\\n     */\\n    modifier onlyInitializing() {\\n        require(_initializing, \\\"Initializable: contract is not initializing\\\");\\n        _;\\n    }\\n\\n    /**\\n     * @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\\n     * Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\\n     * to any version. It is recommended to use this to lock implementation contracts that are designed to be called\\n     * through proxies.\\n     */\\n    function _disableInitializers() internal virtual {\\n        _setInitializedVersion(type(uint8).max);\\n    }\\n\\n    function _setInitializedVersion(uint8 version) private returns (bool) {\\n        // If the contract is initializing we ignore whether _initialized is set in order to support multiple\\n        // inheritance patterns, but we only do this in the context of a constructor, and for the lowest level\\n        // of initializers, because in other contexts the contract may have been reentered.\\n        if (_initializing) {\\n            require(\\n                version == 1 && !AddressUpgradeable.isContract(address(this)),\\n                \\\"Initializable: contract is already initialized\\\"\\n            );\\n            return false;\\n        } else {\\n            require(_initialized < version, \\\"Initializable: contract is already initialized\\\");\\n            _initialized = version;\\n            return true;\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x7454006cccb737612b00104d2f606d728e2818b778e7e55542f063c614ce46ba\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.5.0) (utils/Address.sol)\\n\\npragma solidity ^0.8.1;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary AddressUpgradeable {\\n    /**\\n     * @dev Returns true if `account` is a contract.\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * It is unsafe to assume that an address for which this function returns\\n     * false is an externally-owned account (EOA) and not a contract.\\n     *\\n     * Among others, `isContract` will return false for the following\\n     * types of addresses:\\n     *\\n     *  - an externally-owned account\\n     *  - a contract in construction\\n     *  - an address where a contract will be created\\n     *  - an address where a contract lived, but was destroyed\\n     * ====\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\\n     *\\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\\n     * constructor.\\n     * ====\\n     */\\n    function isContract(address account) internal view returns (bool) {\\n        // This method relies on extcodesize/address.code.length, which returns 0\\n        // for contracts in construction, since the code is only stored at the end\\n        // of the constructor execution.\\n\\n        return account.code.length > 0;\\n    }\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        require(address(this).balance >= amount, \\\"Address: insufficient balance\\\");\\n\\n        (bool success, ) = recipient.call{value: amount}(\\\"\\\");\\n        require(success, \\\"Address: unable to send value, recipient may have reverted\\\");\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain `call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason, it is bubbled up by this\\n     * function (like regular Solidity function calls).\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionCall(target, data, \\\"Address: low-level call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\\n     * `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, value, \\\"Address: low-level call with value failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(address(this).balance >= value, \\\"Address: insufficient balance for call\\\");\\n        require(isContract(target), \\\"Address: call to non-contract\\\");\\n\\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\\n        return verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        return functionStaticCall(target, data, \\\"Address: low-level static call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        require(isContract(target), \\\"Address: static call to non-contract\\\");\\n\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Tool to verifies that a low level call was successful, and revert if it wasn't, either by bubbling the\\n     * revert reason using the provided one.\\n     *\\n     * _Available since v4.3._\\n     */\\n    function verifyCallResult(\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal pure returns (bytes memory) {\\n        if (success) {\\n            return returndata;\\n        } else {\\n            // Look for revert reason and bubble it up if present\\n            if (returndata.length > 0) {\\n                // The easiest way to bubble the revert reason is using memory via assembly\\n\\n                assembly {\\n                    let returndata_size := mload(returndata)\\n                    revert(add(32, returndata), returndata_size)\\n                }\\n            } else {\\n                revert(errorMessage);\\n            }\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x55cf2bd9fc76704ddcdc19834cd288b7de00fc0f298a40ea16a954ae8991db2d\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\nimport \\\"../proxy/utils/Initializable.sol\\\";\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract ContextUpgradeable is Initializable {\\n    function __Context_init() internal onlyInitializing {\\n    }\\n\\n    function __Context_init_unchained() internal onlyInitializing {\\n    }\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n\\n    /**\\n     * @dev This empty reserved space is put in place to allow future versions to add new\\n     * variables without shifting down storage in the inheritance chain.\\n     * See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\\n     */\\n    uint256[50] private __gap;\\n}\\n\",\"keccak256\":\"0x963ea7f0b48b032eef72fe3a7582edf78408d6f834115b9feadd673a4d5bd149\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC721/IERC721.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../../utils/introspection/IERC165.sol\\\";\\n\\n/**\\n * @dev Required interface of an ERC721 compliant contract.\\n */\\ninterface IERC721 is IERC165 {\\n    /**\\n     * @dev Emitted when `tokenId` token is transferred from `from` to `to`.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);\\n\\n    /**\\n     * @dev Emitted when `owner` enables `approved` to manage the `tokenId` token.\\n     */\\n    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);\\n\\n    /**\\n     * @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\\n     */\\n    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);\\n\\n    /**\\n     * @dev Returns the number of tokens in ``owner``'s account.\\n     */\\n    function balanceOf(address owner) external view returns (uint256 balance);\\n\\n    /**\\n     * @dev Returns the owner of the `tokenId` token.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     */\\n    function ownerOf(uint256 tokenId) external view returns (address owner);\\n\\n    /**\\n     * @dev Safely transfers `tokenId` token from `from` to `to`.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must exist and be owned by `from`.\\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function safeTransferFrom(\\n        address from,\\n        address to,\\n        uint256 tokenId,\\n        bytes calldata data\\n    ) external;\\n\\n    /**\\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must exist and be owned by `from`.\\n     * - If the caller is not `from`, it must be have been allowed to move this token by either {approve} or {setApprovalForAll}.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function safeTransferFrom(\\n        address from,\\n        address to,\\n        uint256 tokenId\\n    ) external;\\n\\n    /**\\n     * @dev Transfers `tokenId` token from `from` to `to`.\\n     *\\n     * WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must be owned by `from`.\\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(\\n        address from,\\n        address to,\\n        uint256 tokenId\\n    ) external;\\n\\n    /**\\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account.\\n     * The approval is cleared when the token is transferred.\\n     *\\n     * Only a single account can be approved at a time, so approving the zero address clears previous approvals.\\n     *\\n     * Requirements:\\n     *\\n     * - The caller must own the token or be an approved operator.\\n     * - `tokenId` must exist.\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address to, uint256 tokenId) external;\\n\\n    /**\\n     * @dev Approve or remove `operator` as an operator for the caller.\\n     * Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\\n     *\\n     * Requirements:\\n     *\\n     * - The `operator` cannot be the caller.\\n     *\\n     * Emits an {ApprovalForAll} event.\\n     */\\n    function setApprovalForAll(address operator, bool _approved) external;\\n\\n    /**\\n     * @dev Returns the account approved for `tokenId` token.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     */\\n    function getApproved(uint256 tokenId) external view returns (address operator);\\n\\n    /**\\n     * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\\n     *\\n     * See {setApprovalForAll}\\n     */\\n    function isApprovedForAll(address owner, address operator) external view returns (bool);\\n}\\n\",\"keccak256\":\"0x0d4de01fe5360c38b4ad2b0822a12722958428f5138a7ff47c1720eb6fa52bba\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Address.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.5.0) (utils/Address.sol)\\n\\npragma solidity ^0.8.1;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary Address {\\n    /**\\n     * @dev Returns true if `account` is a contract.\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * It is unsafe to assume that an address for which this function returns\\n     * false is an externally-owned account (EOA) and not a contract.\\n     *\\n     * Among others, `isContract` will return false for the following\\n     * types of addresses:\\n     *\\n     *  - an externally-owned account\\n     *  - a contract in construction\\n     *  - an address where a contract will be created\\n     *  - an address where a contract lived, but was destroyed\\n     * ====\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\\n     *\\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\\n     * constructor.\\n     * ====\\n     */\\n    function isContract(address account) internal view returns (bool) {\\n        // This method relies on extcodesize/address.code.length, which returns 0\\n        // for contracts in construction, since the code is only stored at the end\\n        // of the constructor execution.\\n\\n        return account.code.length > 0;\\n    }\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        require(address(this).balance >= amount, \\\"Address: insufficient balance\\\");\\n\\n        (bool success, ) = recipient.call{value: amount}(\\\"\\\");\\n        require(success, \\\"Address: unable to send value, recipient may have reverted\\\");\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain `call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason, it is bubbled up by this\\n     * function (like regular Solidity function calls).\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionCall(target, data, \\\"Address: low-level call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\\n     * `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, value, \\\"Address: low-level call with value failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(address(this).balance >= value, \\\"Address: insufficient balance for call\\\");\\n        require(isContract(target), \\\"Address: call to non-contract\\\");\\n\\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\\n        return verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        return functionStaticCall(target, data, \\\"Address: low-level static call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        require(isContract(target), \\\"Address: static call to non-contract\\\");\\n\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionDelegateCall(target, data, \\\"Address: low-level delegate call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(isContract(target), \\\"Address: delegate call to non-contract\\\");\\n\\n        (bool success, bytes memory returndata) = target.delegatecall(data);\\n        return verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Tool to verifies that a low level call was successful, and revert if it wasn't, either by bubbling the\\n     * revert reason using the provided one.\\n     *\\n     * _Available since v4.3._\\n     */\\n    function verifyCallResult(\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal pure returns (bytes memory) {\\n        if (success) {\\n            return returndata;\\n        } else {\\n            // Look for revert reason and bubble it up if present\\n            if (returndata.length > 0) {\\n                // The easiest way to bubble the revert reason is using memory via assembly\\n\\n                assembly {\\n                    let returndata_size := mload(returndata)\\n                    revert(add(32, returndata), returndata_size)\\n                }\\n            } else {\\n                revert(errorMessage);\\n            }\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x2ccf9d2313a313d41a791505f2b5abfdc62191b5d4334f7f7a82691c088a1c87\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/IERC165.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC165 standard, as defined in the\\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\\n *\\n * Implementers can declare support of contract interfaces, which can then be\\n * queried by others ({ERC165Checker}).\\n *\\n * For an implementation, see {ERC165}.\\n */\\ninterface IERC165 {\\n    /**\\n     * @dev Returns true if this contract implements the interface defined by\\n     * `interfaceId`. See the corresponding\\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\\n     * to learn more about how these ids are created.\\n     *\\n     * This function call must use less than 30 000 gas.\\n     */\\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\\n}\\n\",\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\"},\"src/contracts/FNFTSingleFactory.sol\":{\"content\":\"//SPDX-License-Identifier: MIT\\npragma solidity 0.8.13;\\n\\nimport \\\"@openzeppelin/contracts/token/ERC721/IERC721.sol\\\";\\n\\nimport \\\"./interfaces/IFNFTSingleFactory.sol\\\";\\nimport \\\"./interfaces/IOwnable.sol\\\";\\nimport \\\"./interfaces/IVaultManager.sol\\\";\\nimport \\\"./proxy/BeaconProxy.sol\\\";\\nimport \\\"./proxy/BeaconUpgradeable.sol\\\";\\nimport \\\"./util/Pausable.sol\\\";\\n\\ncontract FNFTSingleFactory is\\n    IFNFTSingleFactory,\\n    Pausable,\\n    BeaconUpgradeable\\n{\\n    IVaultManager public override vaultManager;\\n\\n    /// @notice flash loan fee basis point\\n    uint256 public override flashLoanFee;\\n\\n    /// @notice governance fee max\\n    uint256 public override governanceFee;\\n\\n    /// @notice instant buy allowed if bid > MC * instantBuyMultiplier\\n    uint256 public override instantBuyMultiplier;\\n\\n    /// @notice minimum size of FNFT-ETH LP pool for TWAP to take effect\\n    uint256 public override liquidityThreshold;\\n\\n    /// @notice the maximum auction length\\n    uint256 public override maxAuctionLength;\\n\\n    /// @notice max curator fee\\n    uint256 public override maxCuratorFee;\\n\\n    /// @notice the max % increase over the initial\\n    uint256 public override maxReserveFactor;\\n\\n    /// @notice the minimum auction length\\n    uint256 public override minAuctionLength;\\n\\n    /// @notice the % bid increase required for a new bid\\n    uint256 public override minBidIncrease;\\n\\n    /// @notice the max % decrease from the initial\\n    uint256 public override minReserveFactor;\\n\\n    /// @notice the % of tokens required to be voting for an auction to start\\n    uint256 public override minVotePercentage;\\n\\n    function __FNFTSingleFactory_init(address _vaultManager, address _fnftSingle) external override initializer {\\n        if (_vaultManager == address(0)) revert ZeroAddress();\\n        if (_fnftSingle == address(0)) revert ZeroAddress();\\n        __Pausable_init();\\n        __BeaconUpgradeable__init(_fnftSingle);\\n        vaultManager = IVaultManager(_vaultManager);\\n        maxAuctionLength = 2 weeks;\\n        minAuctionLength = 3 days;\\n        minReserveFactor = 2000; // 20%\\n        maxReserveFactor = 50000; // 500%\\n        minBidIncrease = 500; // 5%\\n        maxCuratorFee = 1000;\\n        minVotePercentage = 2500; // 25%\\n        liquidityThreshold = 30e18; // ~$30,000 USD in ETH\\n        instantBuyMultiplier = 15; // instant buy allowed if 1.5x MC\\n    }\\n\\n    /// @notice the function to mint a fnftSingle\\n    /// @param _nft the ERC721 token address\\n    /// @param _tokenId the uint256 id of the token\\n    /// @param _supply vault token supply\\n    /// @param _listPrice the initial price of the NFT\\n    /// @param _fee curator fee\\n    /// @param _name the desired name of the vault\\n    /// @param _symbol the desired symbol of the vault\\n    /// @return vaultId\\n    function createVault(\\n        address _nft,\\n        uint256 _tokenId,\\n        uint256 _supply,\\n        uint256 _listPrice,\\n        uint256 _fee,\\n        string memory _name,\\n        string memory _symbol\\n    ) external virtual override returns (address) {\\n        onlyOwnerIfPaused(0);\\n        if (childImplementation() == address(0)) revert ZeroAddress();\\n        IVaultManager _vaultManager = vaultManager;\\n        address fnftSingle = _deployVault(\\n            _name,\\n            _symbol,\\n            _nft,\\n            _tokenId,\\n            _supply,\\n            _listPrice,\\n            _fee\\n        );\\n        uint vaultId = _vaultManager.addVault(fnftSingle);\\n        IERC721(_nft).safeTransferFrom(msg.sender, fnftSingle, _tokenId);\\n\\n        emit VaultCreated(vaultId, msg.sender, fnftSingle, _nft, _tokenId, _supply, _listPrice, _name, _symbol);\\n        return fnftSingle;\\n    }\\n\\n    function setFactoryFees(\\n        uint256 _governanceFee,\\n        uint256 _maxCuratorFee,\\n        uint256 _flashLoanFee\\n    ) public virtual override onlyOwner {\\n        if (_governanceFee > 1000) revert FeeTooHigh();\\n        if (_flashLoanFee > 500) revert FeeTooHigh();\\n        if (_maxCuratorFee > 2000) revert FeeTooHigh();\\n\\n        governanceFee = _governanceFee;\\n        maxCuratorFee = _maxCuratorFee;\\n        flashLoanFee = _flashLoanFee;\\n\\n        emit FactoryFeesUpdated(_governanceFee, _maxCuratorFee, _flashLoanFee);\\n    }\\n\\n    function setFactoryThresholds(\\n        uint256 _maxAuctionLength,\\n        uint256 _minAuctionLength,\\n        uint256 _minReserveFactor,\\n        uint256 _maxReserveFactor,\\n        uint256 _minBidIncrease,\\n        uint256 _minVotePercentage,\\n        uint256 _liquidityThreshold,\\n        uint256 _instantBuyMultiplier\\n    ) public virtual override onlyOwner {\\n        if (_minAuctionLength < 1 days || _minAuctionLength >= maxAuctionLength) revert MinAuctionLengthOutOfBounds();\\n        if (_maxAuctionLength > 8 weeks || _maxAuctionLength <= minAuctionLength) revert MaxAuctionLengthOutOfBounds();\\n\\n        if (_minReserveFactor >= maxReserveFactor) revert MinReserveFactorTooHigh();\\n        if (_maxReserveFactor <= minReserveFactor) revert MaxReserveFactorTooLow();\\n\\n        if (_minBidIncrease > 1000 || _minBidIncrease < 100) revert MinBidIncreaseOutOfBounds();\\n        if (_minVotePercentage > 10000) revert MinVotePercentageTooHigh();\\n\\n        if (_instantBuyMultiplier < 10) revert MultiplierTooLow();\\n\\n        maxAuctionLength = _maxAuctionLength;\\n        minAuctionLength = _minAuctionLength;\\n        minReserveFactor = _minReserveFactor;\\n        maxReserveFactor = _maxReserveFactor;\\n        minBidIncrease = _minBidIncrease;\\n        minVotePercentage = _minVotePercentage;\\n        liquidityThreshold = _liquidityThreshold;\\n        instantBuyMultiplier = _instantBuyMultiplier;\\n\\n        emit FactoryThresholdsUpdated(\\n            _maxAuctionLength,\\n            _minAuctionLength,\\n            _minReserveFactor,\\n            _maxReserveFactor,\\n            _minBidIncrease,\\n            _minVotePercentage,\\n            _liquidityThreshold,\\n            _instantBuyMultiplier\\n        );\\n    }\\n\\n    /// @dev 0x86a777ab == FNFTSingle.__FNFTSingle_init.selector\\n    function _deployVault(\\n        string memory _name,\\n        string memory _symbol,\\n        address _nft,\\n        uint256 _tokenId,\\n        uint256 _supply,\\n        uint256 _listPrice,\\n        uint256 _fee\\n    ) internal returns (address) {\\n        bytes memory _initializationCalldata = abi.encodeWithSelector(\\n            0x86a777ab,\\n            _name,\\n            _symbol,\\n            msg.sender,\\n            _nft,\\n            _tokenId,\\n            _supply,\\n            _listPrice,\\n            _fee\\n        );\\n\\n        address newBeaconProxy = address(new BeaconProxy(address(this), _initializationCalldata));\\n\\n        // Owner for administrative functions.\\n        IOwnable(newBeaconProxy).transferOwnership(owner());\\n\\n        return newBeaconProxy;\\n    }\\n}\\n\",\"keccak256\":\"0xcd14312260fbea4051cc9a7e0130e1442c4a59641eb368ef95f4a6abecb4ff99\",\"license\":\"MIT\"},\"src/contracts/interfaces/IFNFTSingleFactory.sol\":{\"content\":\"//SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\nimport {IPriceOracle} from \\\"./IPriceOracle.sol\\\";\\nimport {IWETH} from \\\"./IWETH.sol\\\";\\nimport {IVaultManager} from \\\"./IVaultManager.sol\\\";\\n\\ninterface IFNFTSingleFactory {\\n    function vaultManager() external view returns (IVaultManager);\\n\\n    function maxAuctionLength() external view returns (uint256);\\n\\n    function minAuctionLength() external view returns (uint256);\\n\\n    function maxCuratorFee() external view returns (uint256);\\n\\n    function governanceFee() external view returns (uint256);\\n\\n    function minBidIncrease() external view returns (uint256);\\n\\n    function minVotePercentage() external view returns (uint256);\\n\\n    function maxReserveFactor() external view returns (uint256);\\n\\n    function minReserveFactor() external view returns (uint256);\\n\\n    function liquidityThreshold() external view returns (uint256);\\n\\n    function instantBuyMultiplier() external view returns (uint256);\\n\\n    function __FNFTSingleFactory_init(address _vaultManager, address _fnftSingle) external;\\n\\n    function createVault(\\n        address _nft,\\n        uint256 _tokenId,\\n        uint256 _supply,\\n        uint256 _listPrice,\\n        uint256 _fee,\\n        string memory _name,\\n        string memory _symbol\\n    ) external returns (address);\\n\\n    function flashLoanFee() external view returns (uint256);\\n\\n    function setFactoryFees(\\n        uint256 _governanceFee,\\n        uint256 _maxCuratorFee,\\n        uint256 _flashLoanFee\\n    ) external;\\n\\n    function setFactoryThresholds(\\n        uint256 _maxAuctionLength,\\n        uint256 _minAuctionLength,\\n        uint256 _minReserveFactor,\\n        uint256 _maxReserveFactor,\\n        uint256 _minBidIncrease,\\n        uint256 _minVotePercentage,\\n        uint256 _liquidityThreshold,\\n        uint256 _instantBuyMultiplier\\n    ) external;\\n\\n    event FactoryFeesUpdated(uint256 governanceFee, uint256 maxCuratorFee, uint256 flashLoanFee);\\n    event FactoryThresholdsUpdated(\\n        uint256 maxAuctionLength,\\n        uint256 minAuctionLength,\\n        uint256 minReserveFactor,\\n        uint256 maxReserveFactor,\\n        uint256 minBidIncrease,\\n        uint256 minVotePercentage,\\n        uint256 liquidityThreshold,\\n        uint256 instantBuyMultiplier\\n    );\\n    event FeeExclusionUpdated(address target, bool excluded);\\n    event VaultCreated(\\n        uint256 indexed vaultId,\\n        address curator,\\n        address vaultAddress,\\n        address assetAddress,\\n        uint256 tokenId,\\n        uint256 supply,\\n        uint256 listPrice,\\n        string name,\\n        string symbol\\n    );\\n    event VaultCurated(\\n        address vaultAddress,\\n        address curator,\\n        uint256 supply,\\n        uint256 listPrice,\\n        uint256 fee\\n    );\\n\\n    error FeeTooHigh();\\n    error MaxAuctionLengthOutOfBounds();\\n    error MinAuctionLengthOutOfBounds();\\n    error MinBidIncreaseOutOfBounds();\\n    error MinReserveFactorTooHigh();\\n    error MaxReserveFactorTooLow();\\n    error MinVotePercentageTooHigh();\\n    error MultiplierTooLow();\\n    error ZeroAddress();\\n}\\n\",\"keccak256\":\"0x8adf8ad9d83641722a25bf4b37247afceebae7c5b07c1a18e2451f28c4f1f230\",\"license\":\"MIT\"},\"src/contracts/interfaces/IOwnable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\ninterface IOwnable {    \\n    function transferOwnership(address newOwner) external;\\n}\",\"keccak256\":\"0x9716971d2cc675c21348080f2678c3af6199ea5632bfac3a81d9f1da5bb685c8\",\"license\":\"MIT\"},\"src/contracts/interfaces/IPriceOracle.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\nimport \\\"../libraries/UQ112x112.sol\\\";\\nimport \\\"../libraries/math/FixedPoint.sol\\\";\\nimport \\\"./IUniswapV2Factory.sol\\\";\\n\\ninterface IPriceOracle {\\n    // Struct that contains metadata of two token pair that is stored in the liquidity pool.\\n    // Metadata used to calculated TWAP (Time-weighted average price).\\n    struct PairInfo {\\n        address token0;\\n        address token1;\\n        uint256 price0CumulativeLast;\\n        uint256 price1CumulativeLast;\\n        FixedPoint.uq112x112 price0Average;\\n        FixedPoint.uq112x112 price1Average;\\n        uint216 totalUpdates;\\n        uint32 blockTimestampLast;\\n        bool exists;\\n    }\\n\\n    function period() external view returns (uint256);\\n\\n    function minimumPairInfoUpdate() external view returns (uint256);\\n\\n    function WETH() external view returns (address);\\n\\n    function factory() external view returns (IUniswapV2Factory);\\n\\n    function __PriceOracle_init() external;\\n\\n    function setPeriod(uint256 _period) external;\\n\\n    function setMinimumPairInfoUpdate(uint256 _minimumPairInfoUpdate) external;\\n\\n    function getPairAddress(address _token0, address _token1) external view returns (address);\\n\\n    function getPairInfo(address _token0, address _token1) external view returns (PairInfo memory pairInfo);\\n\\n    function getPairInfo(address _pair) external view returns (PairInfo memory pairInfo);\\n\\n    function updatePairInfo(address _token0, address _token1) external;\\n\\n    function updateFNFTPairInfo(address _fnft) external;\\n\\n    function createFNFTPair(address _token0) external returns (address);\\n\\n    function consult(\\n        address _token,\\n        address _pair,\\n        uint256 _amountIn\\n    ) external view returns (uint256 amountOut);\\n\\n    function getFNFTPriceETH(address _fnft, uint256 _amountIn) external view returns (uint256 amountOut);\\n\\n    event PeriodUpdated(uint256 oldPeriod, uint256 newPeriod);\\n    event MinimumPairInfoUpdateUpdated(uint256 oldMinimumPairInfoUpdate, uint256 newMinimumPairInfoUpdate);\\n\\n    error InvalidToken();\\n    error NotEnoughUpdates();\\n    error PairInfoAlreadyExists();\\n    error PairInfoDoesNotExist();\\n}\\n\",\"keccak256\":\"0x1e4947bb1b352879a5661acf90d2a0229bf89964dd95ba6c57c890c112ffecbe\",\"license\":\"MIT\"},\"src/contracts/interfaces/IUniswapV2Factory.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface IUniswapV2Factory {\\n    function INIT_CODE_PAIR_HASH() external view returns (bytes32);\\n\\n    function feeTo() external view returns (address);\\n\\n    function feeToSetter() external view returns (address);\\n\\n    function migrator() external view returns (address);\\n\\n    function getPair(address tokenA, address tokenB) external view returns (address pair);\\n\\n    function allPairs(uint256) external view returns (address pair);\\n\\n    function allPairsLength() external view returns (uint256);\\n\\n    function createPair(address tokenA, address tokenB) external returns (address pair);\\n\\n    function setFeeTo(address) external;\\n\\n    function setFeeToSetter(address) external;\\n\\n    function setMigrator(address) external;\\n\\n    event PairCreated(address indexed token0, address indexed token1, address pair, uint256);\\n}\\n\",\"keccak256\":\"0xbff8a2e20a5340751c23480b5f703f2a8af70fc2f8c8095862b89258295a9544\",\"license\":\"MIT\"},\"src/contracts/interfaces/IVaultManager.sol\":{\"content\":\"//SPDX-License-Identifier: MIT\\npragma solidity 0.8.13;\\n\\ninterface IVaultManager {\\n    function fnftSingleFactory() external view returns (address);\\n\\n    function fnftCollectionFactory() external view returns (address);\\n\\n    function excludedFromFees(address) external view returns (bool);\\n\\n    function feeDistributor() external view returns (address);\\n\\n    function __VaultManager_init(\\n        address _weth,\\n        address _ifoFactory,\\n        address _priceOracle\\n    ) external;\\n\\n    function WETH() external view returns (address);\\n\\n    function priceOracle() external view returns (address);\\n\\n    function ifoFactory() external view returns (address);\\n\\n    function zapContract() external view returns (address);\\n\\n    function feeReceiver() external view returns (address payable);\\n\\n    function togglePaused() external;\\n\\n    function addVault(address _fnft) external returns (uint256 vaultId);\\n\\n    function setPriceOracle(address _priceOracle) external;\\n\\n    function setFeeDistributor(address _feeDistributor) external;\\n\\n    function setFeeExclusion(address _address, bool _excluded) external;\\n\\n    function setFeeReceiver(address payable _feeReceiver) external;\\n\\n    function setZapContract(address _zapContract) external;\\n\\n    function setFNFTCollectionFactory(address _fnftCollectionFactory) external;\\n\\n    function setFNFTSingleFactory(address _fnftCollectionFactory) external;\\n\\n    function vault(uint256 vaultId) external view returns (address);\\n\\n    function vaults(uint256) external view returns (address);\\n\\n    function numVaults() external view returns (uint);\\n\\n    event PriceOracleUpdated(address oldPriceOracle, address newPriceOracle);\\n    event FeeReceiverUpdated(address oldFeeReceiver, address newFeeReceiver);\\n    event ZapContractUpdated(address oldZapContract, address newZapContract);\\n    event FNFTCollectionFactoryUpdated(address oldFNFTCollectionFactory, address newFNFTCollectionFactory);\\n    event FNFTSingleFactoryUpdated(address oldFNFTSingleFactory, address newFNFTSingleFactory);\\n    event VaultAdded(uint256 vaultId, address vault);\\n    event FeeDistributorUpdated(address oldFeeDistributor, address newFeeDistributor);\\n    event FeeExclusionUpdated(address target, bool excluded);\\n\\n    error FeeTooHigh();\\n    error MaxAuctionLengthOutOfBounds();\\n    error MaxReserveFactorTooLow();\\n    error MinAuctionLengthOutOfBounds();\\n    error MinBidIncreaseOutOfBounds();\\n    error MinReserveFactorTooHigh();\\n    error MinVotePercentageTooHigh();\\n    error MultiplierTooLow();\\n    error OnlyFactory();\\n    error ZeroAddress();\\n}\\n\",\"keccak256\":\"0x627955435c64cfedd26e5ced55adf691870c03a95e5e962216cb7d8f6068efeb\",\"license\":\"MIT\"},\"src/contracts/interfaces/IWETH.sol\":{\"content\":\"//SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface IWETH {\\n    function deposit() external payable;\\n\\n    function withdraw(uint256) external;\\n\\n    function approve(address, uint256) external returns (bool);\\n\\n    function transfer(address, uint256) external returns (bool);\\n\\n    function transferFrom(\\n        address,\\n        address,\\n        uint256\\n    ) external returns (bool);\\n\\n    function balanceOf(address) external view returns (uint256);\\n}\\n\",\"keccak256\":\"0x43b434c00d9d687556e827aa718563f12bd7a74a1732bfd833ddc54abf922384\",\"license\":\"MIT\"},\"src/contracts/libraries/UQ112x112.sol\":{\"content\":\"//SPDX-License-Identifier: MIT\\npragma solidity 0.8.13;\\n\\n// a library for handling binary fixed point numbers (https://en.wikipedia.org/wiki/Q_(number_format))\\n\\n// range: [0, 2**112 - 1]\\n// resolution: 1 / 2**112\\n\\nlibrary UQ112x112 {\\n    uint224 constant Q112 = 2**112;\\n\\n    // encode a uint112 as a UQ112x112\\n    function encode(uint112 y) internal pure returns (uint224 z) {\\n        z = uint224(y) * Q112; // never overflows\\n    }\\n\\n    // divide a UQ112x112 by a uint112, returning a UQ112x112\\n    function uqdiv(uint224 x, uint112 y) internal pure returns (uint224 z) {\\n        z = x / uint224(y);\\n    }\\n}\\n\",\"keccak256\":\"0x8cd773695d730f37bebc3f721e638ae18855eb427a577d4de3f9c8f5646489fd\",\"license\":\"MIT\"},\"src/contracts/libraries/math/Babylonian.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0-or-later\\npragma solidity 0.8.13;\\n\\n// computes square roots using the babylonian method\\n// https://en.wikipedia.org/wiki/Methods_of_computing_square_roots#Babylonian_method\\nlibrary Babylonian {\\n    // credit for this implementation goes to\\n    // https://github.com/abdk-consulting/abdk-libraries-solidity/blob/master/ABDKMath64x64.sol#L687\\n    function sqrt(uint256 x) internal pure returns (uint256) {\\n        if (x == 0) return 0;\\n        // this block is equivalent to r = uint256(1) << (BitMath.mostSignificantBit(x) / 2);\\n        // however that code costs significantly more gas\\n        uint256 xx = x;\\n        uint256 r = 1;\\n        if (xx >= 0x100000000000000000000000000000000) {\\n            xx >>= 128;\\n            r <<= 64;\\n        }\\n        if (xx >= 0x10000000000000000) {\\n            xx >>= 64;\\n            r <<= 32;\\n        }\\n        if (xx >= 0x100000000) {\\n            xx >>= 32;\\n            r <<= 16;\\n        }\\n        if (xx >= 0x10000) {\\n            xx >>= 16;\\n            r <<= 8;\\n        }\\n        if (xx >= 0x100) {\\n            xx >>= 8;\\n            r <<= 4;\\n        }\\n        if (xx >= 0x10) {\\n            xx >>= 4;\\n            r <<= 2;\\n        }\\n        if (xx >= 0x8) {\\n            r <<= 1;\\n        }\\n        r = (r + x / r) >> 1;\\n        r = (r + x / r) >> 1;\\n        r = (r + x / r) >> 1;\\n        r = (r + x / r) >> 1;\\n        r = (r + x / r) >> 1;\\n        r = (r + x / r) >> 1;\\n        r = (r + x / r) >> 1; // Seven iterations should be enough\\n        uint256 r1 = x / r;\\n        return (r < r1 ? r : r1);\\n    }\\n}\\n\",\"keccak256\":\"0xfb1d203de39344d996ef88c66a47936767b7fef60058eb6e2180c91b7f93abe8\",\"license\":\"GPL-3.0-or-later\"},\"src/contracts/libraries/math/BitMath.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0-or-later\\npragma solidity 0.8.13;\\n\\nlibrary BitMath {\\n    // returns the 0 indexed position of the most significant bit of the input x\\n    // s.t. x >= 2**msb and x < 2**(msb+1)\\n    function mostSignificantBit(uint256 x) internal pure returns (uint8 r) {\\n        require(x > 0, \\\"BitMath::mostSignificantBit: zero\\\");\\n\\n        if (x >= 0x100000000000000000000000000000000) {\\n            x >>= 128;\\n            r += 128;\\n        }\\n        if (x >= 0x10000000000000000) {\\n            x >>= 64;\\n            r += 64;\\n        }\\n        if (x >= 0x100000000) {\\n            x >>= 32;\\n            r += 32;\\n        }\\n        if (x >= 0x10000) {\\n            x >>= 16;\\n            r += 16;\\n        }\\n        if (x >= 0x100) {\\n            x >>= 8;\\n            r += 8;\\n        }\\n        if (x >= 0x10) {\\n            x >>= 4;\\n            r += 4;\\n        }\\n        if (x >= 0x4) {\\n            x >>= 2;\\n            r += 2;\\n        }\\n        if (x >= 0x2) r += 1;\\n    }\\n\\n    // returns the 0 indexed position of the least significant bit of the input x\\n    // s.t. (x & 2**lsb) != 0 and (x & (2**(lsb) - 1)) == 0)\\n    // i.e. the bit at the index is set and the mask of all lower bits is 0\\n    function leastSignificantBit(uint256 x) internal pure returns (uint8 r) {\\n        require(x > 0, \\\"BitMath::leastSignificantBit: zero\\\");\\n\\n        r = 255;\\n        if (x & type(uint256).max > 0) {\\n            r -= 128;\\n        } else {\\n            x >>= 128;\\n        }\\n        if (x & type(uint256).max > 0) {\\n            r -= 64;\\n        } else {\\n            x >>= 64;\\n        }\\n        if (x & type(uint256).max > 0) {\\n            r -= 32;\\n        } else {\\n            x >>= 32;\\n        }\\n        if (x & type(uint256).max > 0) {\\n            r -= 16;\\n        } else {\\n            x >>= 16;\\n        }\\n        if (x & type(uint256).max > 0) {\\n            r -= 8;\\n        } else {\\n            x >>= 8;\\n        }\\n        if (x & 0xf > 0) {\\n            r -= 4;\\n        } else {\\n            x >>= 4;\\n        }\\n        if (x & 0x3 > 0) {\\n            r -= 2;\\n        } else {\\n            x >>= 2;\\n        }\\n        if (x & 0x1 > 0) r -= 1;\\n    }\\n}\\n\",\"keccak256\":\"0x1164085aeec4c45a594dc008d041b6c4fd496d6364bb303f0e65a79be091a855\",\"license\":\"GPL-3.0-or-later\"},\"src/contracts/libraries/math/FixedPoint.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0-or-later\\npragma solidity 0.8.13;\\n\\nimport \\\"./FullMath.sol\\\";\\nimport \\\"./Babylonian.sol\\\";\\nimport \\\"./BitMath.sol\\\";\\n\\n// a library for handling binary fixed point numbers (https://en.wikipedia.org/wiki/Q_(number_format))\\nlibrary FixedPoint {\\n    // range: [0, 2**112 - 1]\\n    // resolution: 1 / 2**112\\n    struct uq112x112 {\\n        uint224 _x;\\n    }\\n\\n    // range: [0, 2**144 - 1]\\n    // resolution: 1 / 2**112\\n    struct uq144x112 {\\n        uint256 _x;\\n    }\\n\\n    uint8 public constant RESOLUTION = 112;\\n    uint256 public constant Q112 = 0x10000000000000000000000000000; // 2**112\\n    uint256 private constant Q224 = 0x100000000000000000000000000000000000000000000000000000000; // 2**224\\n    uint256 private constant LOWER_MASK = 0xffffffffffffffffffffffffffff; // decimal of UQ*x112 (lower 112 bits)\\n\\n    // encode a uint112 as a UQ112x112\\n    function encode(uint112 x) internal pure returns (uq112x112 memory) {\\n        return uq112x112(uint224(x) << RESOLUTION);\\n    }\\n\\n    // encodes a uint144 as a UQ144x112\\n    function encode144(uint144 x) internal pure returns (uq144x112 memory) {\\n        return uq144x112(uint256(x) << RESOLUTION);\\n    }\\n\\n    // decode a UQ112x112 into a uint112 by truncating after the radix point\\n    function decode(uq112x112 memory self) internal pure returns (uint112) {\\n        return uint112(self._x >> RESOLUTION);\\n    }\\n\\n    // decode a UQ144x112 into a uint144 by truncating after the radix point\\n    function decode144(uq144x112 memory self) internal pure returns (uint144) {\\n        return uint144(self._x >> RESOLUTION);\\n    }\\n\\n    // multiply a UQ112x112 by a uint, returning a UQ144x112\\n    // reverts on overflow\\n    function mul(uq112x112 memory self, uint256 y) internal pure returns (uq144x112 memory) {\\n        uint256 z = 0;\\n        require(y == 0 || (z = self._x * y) / y == self._x, \\\"FixedPoint::mul: overflow\\\");\\n        return uq144x112(z);\\n    }\\n\\n    // multiply a UQ112x112 by an int and decode, returning an int\\n    // reverts on overflow\\n    function muli(uq112x112 memory self, int256 y) internal pure returns (int256) {\\n        uint256 z = FullMath.mulDiv(self._x, uint256(y < 0 ? -y : y), Q112);\\n        require(z < 2**255, \\\"FixedPoint::muli: overflow:\\\");\\n        return y < 0 ? -int256(z) : int256(z);\\n    }\\n\\n    // multiply a UQ112x112 by a UQ112x112, returning a UQ112x112\\n    // lossy\\n    function muluq(uq112x112 memory self, uq112x112 memory other) internal pure returns (uq112x112 memory) {\\n        if (self._x == 0 || other._x == 0) {\\n            return uq112x112(0);\\n        }\\n        uint112 upper_self = uint112(self._x >> RESOLUTION); // * 2^0\\n        uint112 lower_self = uint112(self._x & LOWER_MASK); // * 2^-112\\n        uint112 upper_other = uint112(other._x >> RESOLUTION); // * 2^0\\n        uint112 lower_other = uint112(other._x & LOWER_MASK); // * 2^-112\\n\\n        // partial products\\n        uint224 upper = uint224(upper_self) * upper_other; // * 2^0\\n        uint224 lower = uint224(lower_self) * lower_other; // * 2^-224\\n        uint224 uppers_lowero = uint224(upper_self) * lower_other; // * 2^-112\\n        uint224 uppero_lowers = uint224(upper_other) * lower_self; // * 2^-112\\n\\n        // so the bit shift does not overflow\\n        require(upper <= type(uint112).max, \\\"FixedPoint::muluq: upper overflow\\\");\\n\\n        // this cannot exceed 256 bits, all values are 224 bits\\n        uint256 sum = uint256(upper << RESOLUTION) + uppers_lowero + uppero_lowers + (lower >> RESOLUTION);\\n\\n        // so the cast does not overflow\\n        require(sum <= type(uint224).max, \\\"FixedPoint::muluq: sum overflow\\\");\\n\\n        return uq112x112(uint224(sum));\\n    }\\n\\n    // divide a UQ112x112 by a UQ112x112, returning a UQ112x112\\n    function divuq(uq112x112 memory self, uq112x112 memory other) internal pure returns (uq112x112 memory) {\\n        require(other._x > 0, \\\"FixedPoint::divuq: division by zero\\\");\\n        if (self._x == other._x) {\\n            return uq112x112(uint224(Q112));\\n        }\\n        if (self._x <= type(uint144).max) {\\n            uint256 value = (uint256(self._x) << RESOLUTION) / other._x;\\n            require(value <= type(uint224).max, \\\"FixedPoint::divuq: overflow\\\");\\n            return uq112x112(uint224(value));\\n        }\\n\\n        uint256 result = FullMath.mulDiv(Q112, self._x, other._x);\\n        require(result <= type(uint224).max, \\\"FixedPoint::divuq: overflow\\\");\\n        return uq112x112(uint224(result));\\n    }\\n\\n    // returns a UQ112x112 which represents the ratio of the numerator to the denominator\\n    // can be lossy\\n    function fraction(uint256 numerator, uint256 denominator) internal pure returns (uq112x112 memory) {\\n        require(denominator > 0, \\\"FixedPoint::fraction: division by zero\\\");\\n        if (numerator == 0) return FixedPoint.uq112x112(0);\\n\\n        if (numerator <= type(uint144).max) {\\n            uint256 result = (numerator << RESOLUTION) / denominator;\\n            require(result <= type(uint224).max, \\\"FixedPoint::fraction: overflow\\\");\\n            return uq112x112(uint224(result));\\n        } else {\\n            uint256 result = FullMath.mulDiv(numerator, Q112, denominator);\\n            require(result <= type(uint224).max, \\\"FixedPoint::fraction: overflow\\\");\\n            return uq112x112(uint224(result));\\n        }\\n    }\\n\\n    // take the reciprocal of a UQ112x112\\n    // reverts on overflow\\n    // lossy\\n    function reciprocal(uq112x112 memory self) internal pure returns (uq112x112 memory) {\\n        require(self._x != 0, \\\"FixedPoint::reciprocal: reciprocal of zero\\\");\\n        require(self._x != 1, \\\"FixedPoint::reciprocal: overflow\\\");\\n        return uq112x112(uint224(Q224 / self._x));\\n    }\\n\\n    // square root of a UQ112x112\\n    // lossy between 0/1 and 40 bits\\n    function sqrt(uq112x112 memory self) internal pure returns (uq112x112 memory) {\\n        if (self._x <= type(uint144).max) {\\n            return uq112x112(uint224(Babylonian.sqrt(uint256(self._x) << 112)));\\n        }\\n\\n        uint8 safeShiftBits = 255 - BitMath.mostSignificantBit(self._x);\\n        safeShiftBits -= safeShiftBits % 2;\\n        return uq112x112(uint224(Babylonian.sqrt(uint256(self._x) << safeShiftBits) << ((112 - safeShiftBits) / 2)));\\n    }\\n}\\n\",\"keccak256\":\"0xfbd1eac26ce29e109992b7b32db7b73e4a6f756205faf7fcb29359b4f6b351ea\",\"license\":\"GPL-3.0-or-later\"},\"src/contracts/libraries/math/FullMath.sol\":{\"content\":\"// SPDX-License-Identifier: CC-BY-4.0\\npragma solidity 0.8.13;\\n\\n// taken from https://medium.com/coinmonks/math-in-solidity-part-3-percents-and-proportions-4db014e080b1\\n// license is CC-BY-4.0\\nlibrary FullMath {\\n    function fullMul(uint256 x, uint256 y) internal pure returns (uint256 l, uint256 h) {\\n        uint256 mm = mulmod(x, y, type(uint256).max);\\n        l = x * y;\\n        h = mm - l;\\n        if (mm < l) h -= 1;\\n    }\\n\\n    function fullDiv(\\n        uint256 l,\\n        uint256 h,\\n        uint256 d\\n    ) private pure returns (uint256) {\\n        uint256 pow2 = d & (type(uint8).max - d + 1);\\n        d /= pow2;\\n        l /= pow2;\\n        l += h * (((type(uint8).max - pow2 + 1)) / pow2 + 1);\\n        uint256 r = 1;\\n        r *= 2 - d * r;\\n        r *= 2 - d * r;\\n        r *= 2 - d * r;\\n        r *= 2 - d * r;\\n        r *= 2 - d * r;\\n        r *= 2 - d * r;\\n        r *= 2 - d * r;\\n        r *= 2 - d * r;\\n        return l * r;\\n    }\\n\\n    function mulDiv(\\n        uint256 x,\\n        uint256 y,\\n        uint256 d\\n    ) internal pure returns (uint256) {\\n        (uint256 l, uint256 h) = fullMul(x, y);\\n\\n        uint256 mm = mulmod(x, y, d);\\n        if (mm > l) h -= 1;\\n        l -= mm;\\n\\n        if (h == 0) return l / d;\\n\\n        require(h < d, \\\"FullMath: FULLDIV_OVERFLOW\\\");\\n        return fullDiv(l, h, d);\\n    }\\n}\\n\",\"keccak256\":\"0xf5c057a505932a37882cac8417f65110a39381a4588ded1da4a3686eb1e77883\",\"license\":\"CC-BY-4.0\"},\"src/contracts/proxy/BeaconProxy.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity 0.8.13;\\n\\nimport \\\"./IBeacon.sol\\\";\\nimport \\\"./Proxy.sol\\\";\\nimport \\\"@openzeppelin/contracts/utils/Address.sol\\\";\\n\\n/**\\n * @dev This contract implements a proxy that gets the implementation address for each call from a {UpgradeableBeacon}.\\n *\\n * The beacon address is stored in storage slot `uint256(keccak256('eip1967.proxy.beacon')) - 1`, so that it doesn't\\n * conflict with the storage layout of the implementation behind the proxy.\\n *\\n * _Available since v3.4._\\n */\\ncontract BeaconProxy is Proxy {\\n    /**\\n     * @dev The storage slot of the UpgradeableBeacon contract which defines the implementation for this proxy.\\n     * This is bytes32(uint256(keccak256('eip1967.proxy.beacon')) - 1)) and is validated in the constructor.\\n     */\\n    bytes32 private constant _BEACON_SLOT = 0xa3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d50;\\n\\n    /**\\n     * @dev Initializes the proxy with `beacon`.\\n     *\\n     * If `data` is nonempty, it's used as data in a delegate call to the implementation returned by the beacon. This\\n     * will typically be an encoded function call, and allows initializating the storage of the proxy like a Solidity\\n     * constructor.\\n     *\\n     * Requirements:\\n     *\\n     * - `beacon` must be a contract with the interface {IBeacon}.\\n     */\\n    constructor(address beacon, bytes memory data) payable {\\n        assert(_BEACON_SLOT == bytes32(uint256(keccak256(\\\"eip1967.proxy.beacon\\\")) - 1));\\n        _setBeacon(beacon, data);\\n    }\\n\\n    /**\\n     * @dev Returns the current beacon address.\\n     */\\n    function _beacon() internal view virtual returns (address beacon) {\\n        bytes32 slot = _BEACON_SLOT;\\n        // solhint-disable-next-line no-inline-assembly\\n        assembly {\\n            beacon := sload(slot)\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the current implementation address of the associated beacon.\\n     */\\n    function _implementation() internal view virtual override returns (address) {\\n        return IBeacon(_beacon()).childImplementation();\\n    }\\n\\n    /**\\n     * @dev Changes the proxy to use a new beacon.\\n     *\\n     * If `data` is nonempty, it's used as data in a delegate call to the implementation returned by the beacon.\\n     *\\n     * Requirements:\\n     *\\n     * - `beacon` must be a contract.\\n     * - The implementation returned by `beacon` must be a contract.\\n     */\\n    function _setBeacon(address beacon, bytes memory data) internal virtual {\\n        require(\\n            Address.isContract(beacon),\\n            \\\"BeaconProxy: beacon is not a contract\\\"\\n        );\\n        require(\\n            Address.isContract(IBeacon(beacon).childImplementation()),\\n            \\\"BeaconProxy: beacon implementation is not a contract\\\"\\n        );\\n        bytes32 slot = _BEACON_SLOT;\\n\\n        // solhint-disable-next-line no-inline-assembly\\n        assembly {\\n            sstore(slot, beacon)\\n        }\\n\\n        if (data.length > 0) {\\n            Address.functionDelegateCall(_implementation(), data, \\\"BeaconProxy: function call failed\\\");\\n        }\\n    }\\n}\",\"keccak256\":\"0xf4d4c86d46f7e3eed9c0a799bac7a41c6669b8f216d24d435c5d95497397d3ba\",\"license\":\"MIT\"},\"src/contracts/proxy/BeaconUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity 0.8.13;\\n\\nimport \\\"./IBeacon.sol\\\";\\nimport \\\"@openzeppelin/contracts/utils/Address.sol\\\";\\nimport \\\"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\\\";\\n\\n/**\\n * @dev This contract is used in conjunction with one or more instances of {BeaconProxy} to determine their\\n * implementation contract, which is where they will delegate all function calls.\\n *\\n * An owner is able to change the implementation the beacon points to, thus upgrading the proxies that use this beacon.\\n */\\ncontract BeaconUpgradeable is OwnableUpgradeable, IBeacon {\\n    address private _childImplementation;\\n\\n    /**\\n     * @dev Emitted when the child implementation returned by the beacon is changed.\\n     */\\n    event Upgraded(address indexed childImplementation);\\n\\n    function __BeaconUpgradeable__init(address childImplementation_) public initializer {\\n        _setChildImplementation(childImplementation_);\\n    }\\n\\n    /**\\n     * @dev Returns the current child implementation address.\\n     */\\n    function childImplementation() public view virtual override returns (address) {\\n        return _childImplementation;\\n    }\\n\\n    /**\\n     * @dev Upgrades the beacon to a new implementation.\\n     *\\n     * Emits an {Upgraded} event.\\n     *\\n     * Requirements:\\n     *\\n     * - msg.sender must be the owner of the contract.\\n     * - `newChildImplementation` must be a contract.\\n     */\\n    function upgradeChildTo(address newChildImplementation) external virtual override onlyOwner {\\n        _setChildImplementation(newChildImplementation);\\n    }\\n\\n    /**\\n     * @dev Sets the implementation contract address for this beacon\\n     *\\n     * Requirements:\\n     *\\n     * - `newChildImplementation` must be a contract.\\n     */\\n    function _setChildImplementation(address newChildImplementation) private {\\n        require(Address.isContract(newChildImplementation), \\\"UpgradeableBeacon: child implementation is not a contract\\\");\\n        _childImplementation = newChildImplementation;\\n        emit Upgraded(newChildImplementation);\\n    }\\n}\",\"keccak256\":\"0x2258f167a87cad73f9a5ce3daf73bf232c3179a79961e903d57468c20343cb16\",\"license\":\"MIT\"},\"src/contracts/proxy/IBeacon.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity 0.8.13;\\n\\n/**\\n * @dev This is the interface that {BeaconProxy} expects of its beacon.\\n */\\ninterface IBeacon {\\n    /**\\n     * @dev Must return an address that can be used as a delegate call target.\\n     *\\n     * {BeaconProxy} will check that this address is a contract.\\n     */\\n    function childImplementation() external view returns (address);\\n    function upgradeChildTo(address newImplementation) external;\\n}\",\"keccak256\":\"0x2ee2683fe16040709f07a18653117d408b026c5f9eb933b3b6af6d26b617f35c\",\"license\":\"MIT\"},\"src/contracts/proxy/Proxy.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity 0.8.13;\\n\\n/**\\n * @dev This abstract contract provides a fallback function that delegates all calls to another contract using the EVM\\n * instruction `delegatecall`. We refer to the second contract as the _implementation_ behind the proxy, and it has to\\n * be specified by overriding the virtual {_implementation} function.\\n *\\n * Additionally, delegation to the implementation can be triggered manually through the {_fallback} function, or to a\\n * different contract through the {_delegate} function.\\n *\\n * The success and return data of the delegated call will be returned back to the caller of the proxy.\\n */\\nabstract contract Proxy {\\n    /**\\n     * @dev Delegates the current call to `implementation`.\\n     *\\n     * This function does not return to its internall call site, it will return directly to the external caller.\\n     */\\n    function _delegate(address implementation) internal virtual {\\n        // solhint-disable-next-line no-inline-assembly\\n        assembly {\\n            // Copy msg.data. We take full control of memory in this inline assembly\\n            // block because it will not return to Solidity code. We overwrite the\\n            // Solidity scratch pad at memory position 0.\\n            calldatacopy(0, 0, calldatasize())\\n\\n            // Call the implementation.\\n            // out and outsize are 0 because we don't know the size yet.\\n            let result := delegatecall(gas(), implementation, 0, calldatasize(), 0, 0)\\n\\n            // Copy the returned data.\\n            returndatacopy(0, 0, returndatasize())\\n\\n            switch result\\n            // delegatecall returns 0 on error.\\n            case 0 { revert(0, returndatasize()) }\\n            default { return(0, returndatasize()) }\\n        }\\n    }\\n\\n    /**\\n     * @dev This is a virtual function that should be overriden so it returns the address to which the fallback function\\n     * and {_fallback} should delegate.\\n     */\\n    function _implementation() internal view virtual returns (address);\\n\\n    /**\\n    * @dev Function that is run as the first thing in the fallback function.\\n    * Can be redefined in derived contracts to add functionality.\\n    * Redefinitions must call super._willFallback().\\n    */\\n    function _willFallback() internal virtual {\\n    }\\n\\n    /**\\n     * @dev Delegates the current call to the address returned by `_implementation()`.\\n     *\\n     * This function does not return to its internall call site, it will return directly to the external caller.\\n     */\\n    function _fallback() internal virtual {\\n        _beforeFallback();\\n        _delegate(_implementation());\\n    }\\n\\n    /**\\n     * @dev Fallback function that delegates calls to the address returned by `_implementation()`. Will run if no other\\n     * function in the contract matches the call data.\\n     */\\n    fallback () external payable virtual {\\n        _fallback();\\n    }\\n\\n    /**\\n     * @dev Fallback function that delegates calls to the address returned by `_implementation()`. Will run if call data\\n     * is empty.\\n     */\\n    receive () external payable virtual {\\n        _fallback();\\n    }\\n\\n    /**\\n     * @dev Hook that is called before falling back to the implementation. Can happen as part of a manual `_fallback`\\n     * call, or as part of the Solidity `fallback` or `receive` functions.\\n     *\\n     * If overriden should call `super._beforeFallback()`.\\n     */\\n    function _beforeFallback() internal virtual {\\n    }\\n}\",\"keccak256\":\"0xe39547f99ea306cdbea6d184b91c94a4da952605da3ee9175aa27075fee6032e\",\"license\":\"MIT\"},\"src/contracts/util/Pausable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity 0.8.13;\\n\\nimport \\\"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\\\";\\n\\ncontract Pausable is OwnableUpgradeable {\\n\\n    function __Pausable_init() internal initializer {\\n        __Ownable_init();\\n    }\\n\\n    event SetIsGuardian(address addr, bool isGuardian);\\n    event SetPaused(uint256 lockId, bool paused);\\n\\n    mapping(address => bool) public isGuardian;\\n    mapping(uint256 => bool) public isPaused;\\n    // 0  : createVault\\n    // 1  : mint\\n    // 2  : redeem\\n    // 3  : swap\\n    // 4  : auction\\n    // 5  : flashloan\\n    // 6  : fee\\n    // 7  : price\\n    // 10 : stake\\n\\n    error Paused();\\n    error Unauthorized();\\n\\n    function onlyOwnerIfPaused(uint256 lockId) public view virtual {\\n        if (isPaused[lockId] && msg.sender != owner()) revert Paused();\\n    }\\n\\n    function pause(uint256 lockId) public virtual {\\n        if (!isGuardian[msg.sender]) revert Unauthorized();\\n        isPaused[lockId] = true;\\n        emit SetPaused(lockId, true);\\n    }\\n\\n    function setIsGuardian(address _address, bool _isGuardian) public virtual onlyOwner {\\n        isGuardian[_address] = _isGuardian;\\n        emit SetIsGuardian(_address, _isGuardian);\\n    }\\n\\n    function unpause(uint256 lockId)\\n        public\\n        virtual\\n        onlyOwner\\n    {\\n        isPaused[lockId] = false;\\n        emit SetPaused(lockId, false);\\n    }\\n}\\n\",\"keccak256\":\"0x63dab5ed768e7ff4157e8dc9c794ad3800b26c5b7beb4392aab586e118a83b69\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b50611ece806100206000396000f3fe60806040523480156200001157600080fd5b5060043610620001e95760003560e01c8063715018a6116200010d578063a0b335e311620000a3578063da525716116200007a578063da52571614620003dc578063e2386a5514620003ee578063f2fde38b14620003f8578063fabc1cbc146200040f57600080fd5b8063a0b335e314620003a2578063bdf2a43c14620003ac578063c968808614620003d257600080fd5b80638a364bc111620000e45780638a364bc1146200035b5780638a4adf2414620003655780638da5cb5b1462000379578063901a17ac146200038b57600080fd5b8063715018a614620003305780637c513c0f146200033a5780637c77b616146200034457600080fd5b80631f1713fc116200018357806332977c73116200015a57806332977c7314620002e25780634847cdc814620002ec5780635410bfc914620002f657806355b7851b146200030057600080fd5b80631f1713fc146200029d57806323845fb514620002b4578063310aefcf14620002cb57600080fd5b80630e519ef911620001c45780630e519ef9146200025b5780630ea90a12146200026557806310d25c51146200026f578063136439dd146200028657600080fd5b806309990a9614620001ee5780630c68ba21146200020b5780630cf0cfa61462000242575b600080fd5b620001f860725481565b6040519081526020015b60405180910390f35b620002316200021c3660046200110a565b60656020526000908152604090205460ff1681565b604051901515815260200162000202565b62000259620002533660046200112f565b62000426565b005b620001f8606d5481565b620001f8606a5481565b62000259620002803660046200110a565b62000558565b620002596200029736600462001167565b620005d6565b62000259620002ae3660046200110a565b6200065e565b62000259620002c536600462001181565b620006a2565b62000259620002dc366004620011c1565b6200072c565b620001f860735481565b620001f860695481565b620001f8606f5481565b620003176200031136600462001299565b62000813565b6040516001600160a01b03909116815260200162000202565b62000259620009b6565b620001f860715481565b620002596200035536600462001167565b620009f1565b620001f8606e5481565b60685462000317906001600160a01b031681565b6033546001600160a01b031662000317565b620002596200039c3660046200133d565b62000a3a565b620001f860705481565b62000231620003bd36600462001167565b60666020526000908152604090205460ff1681565b620001f8606c5481565b6067546001600160a01b031662000317565b620001f8606b5481565b62000259620004093660046200110a565b62000c21565b620002596200042036600462001167565b62000cc0565b600062000434600162000d3b565b905080156200044d576000805461ff0019166101001790555b6001600160a01b038316620004755760405163d92e233d60e01b815260040160405180910390fd5b6001600160a01b0382166200049d5760405163d92e233d60e01b815260040160405180910390fd5b620004a762000dd0565b620004b28262000558565b606880546001600160a01b0319166001600160a01b03851617905562127500606d556203f4806070556107d060725561c350606f556101f46071556103e8606e556109c46073556801a055690d9db80000606c55600f606b55801562000553576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb3847402498906020015b60405180910390a15b505050565b600062000566600162000d3b565b905080156200057f576000805461ff0019166101001790555b6200058a8262000e45565b8015620005d2576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb3847402498906020015b60405180910390a15b5050565b3360009081526065602052604090205460ff1662000606576040516282b42960e81b815260040160405180910390fd5b600081815260666020908152604091829020805460ff191660019081179091558251848152918201527f77f1fcfcce67dc392d64f842056d2ec06c80986c47c910f7e79c5b23a2738d7491015b60405180910390a150565b6033546001600160a01b03163314620006945760405162461bcd60e51b81526004016200068b9062001393565b60405180910390fd5b6200069f8162000e45565b50565b6033546001600160a01b03163314620006cf5760405162461bcd60e51b81526004016200068b9062001393565b6001600160a01b038216600081815260656020908152604091829020805460ff19168515159081179091558251938452908301527fd0b6b573d5442f7c29fd50d9735ae341581c25c6ed07748d50eda519f1ffa88a9101620005c9565b6033546001600160a01b03163314620007595760405162461bcd60e51b81526004016200068b9062001393565b6103e88311156200077d5760405163cd4e616760e01b815260040160405180910390fd5b6101f4811115620007a15760405163cd4e616760e01b815260040160405180910390fd5b6107d0821115620007c55760405163cd4e616760e01b815260040160405180910390fd5b606a839055606e829055606981905560408051848152602081018490529081018290527f9acd433700d7c453418ccd79bbddff52bbe5016e018b305f7275172df8c5d664906060016200054a565b6000620008216000620009f1565b6000620008366067546001600160a01b031690565b6001600160a01b0316036200085e5760405163d92e233d60e01b815260040160405180910390fd5b6068546001600160a01b031660006200087d85858c8c8c8c8c62000f0e565b6040516312b5ad0160e11b81526001600160a01b03808316600483015291925060009184169063256b5a02906024016020604051808303816000875af1158015620008cc573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620008f29190620013c8565b604051632142170760e11b81523360048201526001600160a01b038481166024830152604482018d9052919250908c16906342842e0e90606401600060405180830381600087803b1580156200094757600080fd5b505af11580156200095c573d6000803e3d6000fd5b50505050807f220044f302cf7fe455029c3b05386aa5d8020bdeb160379089b81b53ed95693d33848e8e8e8e8d8d604051620009a098979695949392919062001432565b60405180910390a2509998505050505050505050565b6033546001600160a01b03163314620009e35760405162461bcd60e51b81526004016200068b9062001393565b620009ef60006200102f565b565b60008181526066602052604090205460ff16801562000a1b57506033546001600160a01b03163314155b156200069f576040516313d0ff5960e31b815260040160405180910390fd5b6033546001600160a01b0316331462000a675760405162461bcd60e51b81526004016200068b9062001393565b6201518087108062000a7b5750606d548710155b1562000a9a5760405163568324c160e01b815260040160405180910390fd5b6249d40088118062000aae57506070548811155b1562000acd57604051639337d06760e01b815260040160405180910390fd5b606f54861062000af05760405163943260ad60e01b815260040160405180910390fd5b607254851162000b1357604051636db012dd60e01b815260040160405180910390fd5b6103e884118062000b245750606484105b1562000b43576040516315958edd60e21b815260040160405180910390fd5b61271083111562000b6757604051630d39c36360e11b815260040160405180910390fd5b600a81101562000b8a57604051630997be8760e21b815260040160405180910390fd5b606d88905560708790556072869055606f85905560718490556073839055606c829055606b8190556040805189815260208101899052908101879052606081018690526080810185905260a0810184905260c0810183905260e081018290527fa1927a9505419e03e733009247c2d2085634a33047cfe73787bcc983e823e311906101000160405180910390a15050505050505050565b6033546001600160a01b0316331462000c4e5760405162461bcd60e51b81526004016200068b9062001393565b6001600160a01b03811662000cb55760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016200068b565b6200069f816200102f565b6033546001600160a01b0316331462000ced5760405162461bcd60e51b81526004016200068b9062001393565b6000818152606660209081526040808320805460ff191690558051848152918201929092527f77f1fcfcce67dc392d64f842056d2ec06c80986c47c910f7e79c5b23a2738d74910162000653565b60008054610100900460ff161562000d87578160ff16600114801562000d605750303b155b62000d7f5760405162461bcd60e51b81526004016200068b90620014a3565b506000919050565b60005460ff80841691161062000db15760405162461bcd60e51b81526004016200068b90620014a3565b506000805460ff191660ff92909216919091179055600190565b919050565b600062000dde600162000d3b565b9050801562000df7576000805461ff0019166101001790555b62000e0162001081565b80156200069f576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200162000653565b6001600160a01b0381163b62000ec45760405162461bcd60e51b815260206004820152603960248201527f5570677261646561626c65426561636f6e3a206368696c6420696d706c656d6560448201527f6e746174696f6e206973206e6f74206120636f6e74726163740000000000000060648201526084016200068b565b606780546001600160a01b0319166001600160a01b0383169081179091556040517fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b90600090a250565b6000806386a777ab8989338a8a8a8a8a60405160240162000f37989796959493929190620014f1565b6040516020818303038152906040529060e01b6020820180516001600160e01b03838183161783525050505090506000308260405162000f7790620010e4565b62000f8492919062001559565b604051809103906000f08015801562000fa1573d6000803e3d6000fd5b509050806001600160a01b031663f2fde38b62000fc66033546001600160a01b031690565b6040516001600160e01b031960e084901b1681526001600160a01b039091166004820152602401600060405180830381600087803b1580156200100857600080fd5b505af11580156200101d573d6000803e3d6000fd5b50929c9b505050505050505050505050565b603380546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b600054610100900460ff16620010ab5760405162461bcd60e51b81526004016200068b9062001587565b620009ef600054610100900460ff16620010d95760405162461bcd60e51b81526004016200068b9062001587565b620009ef336200102f565b6108c680620015d383390190565b80356001600160a01b038116811462000dcb57600080fd5b6000602082840312156200111d57600080fd5b6200112882620010f2565b9392505050565b600080604083850312156200114357600080fd5b6200114e83620010f2565b91506200115e60208401620010f2565b90509250929050565b6000602082840312156200117a57600080fd5b5035919050565b600080604083850312156200119557600080fd5b620011a083620010f2565b915060208301358015158114620011b657600080fd5b809150509250929050565b600080600060608486031215620011d757600080fd5b505081359360208301359350604090920135919050565b634e487b7160e01b600052604160045260246000fd5b600082601f8301126200121657600080fd5b813567ffffffffffffffff80821115620012345762001234620011ee565b604051601f8301601f19908116603f011681019082821181831017156200125f576200125f620011ee565b816040528381528660208588010111156200127957600080fd5b836020870160208301376000602085830101528094505050505092915050565b600080600080600080600060e0888a031215620012b557600080fd5b620012c088620010f2565b96506020880135955060408801359450606088013593506080880135925060a088013567ffffffffffffffff80821115620012fa57600080fd5b620013088b838c0162001204565b935060c08a01359150808211156200131f57600080fd5b506200132e8a828b0162001204565b91505092959891949750929550565b600080600080600080600080610100898b0312156200135b57600080fd5b505086359860208801359850604088013597606081013597506080810135965060a0810135955060c0810135945060e0013592509050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b600060208284031215620013db57600080fd5b5051919050565b6000815180845260005b818110156200140a57602081850181015186830182015201620013ec565b818111156200141d576000602083870101525b50601f01601f19169290920160200192915050565b6001600160a01b038981168252888116602083015287166040820152606081018690526080810185905260a0810184905261010060c082018190526000906200147e83820186620013e2565b905082810360e0840152620014948185620013e2565b9b9a5050505050505050505050565b6020808252602e908201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160408201526d191e481a5b9a5d1a585b1a5e995960921b606082015260800190565b6000610100808352620015078184018c620013e2565b905082810360208401526200151d818b620013e2565b6001600160a01b03998a16604085015297909816606083015250608081019490945260a084019290925260c083015260e0909101529392505050565b6001600160a01b03831681526040602082018190526000906200157f90830184620013e2565b949350505050565b6020808252602b908201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960408201526a6e697469616c697a696e6760a81b60608201526080019056fe60806040526040516108c63803806108c68339810160408190526100229161042a565b61004d60017fa3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d516104ea565b600080516020610885833981519152146100695761006961050f565b610073828261007a565b505061058f565b61008d8261022660201b6100291760201c565b6100ec5760405162461bcd60e51b815260206004820152602560248201527f426561636f6e50726f78793a20626561636f6e206973206e6f74206120636f6e6044820152641d1c9858dd60da1b60648201526084015b60405180910390fd5b610160826001600160a01b031663da5257166040518163ffffffff1660e01b8152600401602060405180830381865afa15801561012d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101519190610525565b61022660201b6100291760201c565b6101d25760405162461bcd60e51b815260206004820152603460248201527f426561636f6e50726f78793a20626561636f6e20696d706c656d656e7461746960448201527f6f6e206973206e6f74206120636f6e747261637400000000000000000000000060648201526084016100e3565b6000805160206108858339815191528281558151156102215761021f6101f6610235565b836040518060600160405280602181526020016108a5602191396102b360201b6100381760201c565b505b505050565b6001600160a01b03163b151590565b600061024d6000805160206108858339815191525490565b6001600160a01b031663da5257166040518163ffffffff1660e01b8152600401602060405180830381865afa15801561028a573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102ae9190610525565b905090565b60606001600160a01b0384163b61031b5760405162461bcd60e51b815260206004820152602660248201527f416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f6044820152651b9d1c9858dd60d21b60648201526084016100e3565b600080856001600160a01b0316856040516103369190610540565b600060405180830381855af49150503d8060008114610371576040519150601f19603f3d011682016040523d82523d6000602084013e610376565b606091505b509092509050610387828286610393565b925050505b9392505050565b606083156103a257508161038c565b8251156103b25782518084602001fd5b8160405162461bcd60e51b81526004016100e3919061055c565b80516001600160a01b03811681146103e357600080fd5b919050565b634e487b7160e01b600052604160045260246000fd5b60005b83811015610419578181015183820152602001610401565b8381111561021f5750506000910152565b6000806040838503121561043d57600080fd5b610446836103cc565b60208401519092506001600160401b038082111561046357600080fd5b818501915085601f83011261047757600080fd5b815181811115610489576104896103e8565b604051601f8201601f19908116603f011681019083821181831017156104b1576104b16103e8565b816040528281528860208487010111156104ca57600080fd5b6104db8360208301602088016103fe565b80955050505050509250929050565b60008282101561050a57634e487b7160e01b600052601160045260246000fd5b500390565b634e487b7160e01b600052600160045260246000fd5b60006020828403121561053757600080fd5b61038c826103cc565b600082516105528184602087016103fe565b9190910192915050565b602081526000825180602084015261057b8160408501602087016103fe565b601f01601f19169190910160400192915050565b6102e78061059e6000396000f3fe60806040523661001357610011610017565b005b6100115b61002761002261011c565b6101ac565b565b6001600160a01b03163b151590565b60606001600160a01b0384163b6100a55760405162461bcd60e51b815260206004820152602660248201527f416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f6044820152651b9d1c9858dd60d21b60648201526084015b60405180910390fd5b600080856001600160a01b0316856040516100c09190610239565b600060405180830381855af49150503d80600081146100fb576040519150601f19603f3d011682016040523d82523d6000602084013e610100565b606091505b50915091506101108282866101d0565b925050505b9392505050565b60006101467fa3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d505490565b6001600160a01b031663da5257166040518163ffffffff1660e01b8152600401602060405180830381865afa158015610183573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101a79190610255565b905090565b3660008037600080366000845af43d6000803e8080156101cb573d6000f35b3d6000fd5b606083156101df575081610115565b8251156101ef5782518084602001fd5b8160405162461bcd60e51b815260040161009c919061027e565b60005b8381101561022457818101518382015260200161020c565b83811115610233576000848401525b50505050565b6000825161024b818460208701610209565b9190910192915050565b60006020828403121561026757600080fd5b81516001600160a01b038116811461011557600080fd5b602081526000825180602084015261029d816040850160208701610209565b601f01601f1916919091016040019291505056fea2646970667358221220f8229659447c762e7a87e74215956d58f6e585f6775523d0543037f8a20f99c664736f6c634300080d0033a3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d50426561636f6e50726f78793a2066756e6374696f6e2063616c6c206661696c6564a2646970667358221220db76f6185e961eab1fa3fa3e87ab09f5cbac46a4b22c157cc9844a342b5f5c0b64736f6c634300080d0033",
  "deployedBytecode": "0x60806040523480156200001157600080fd5b5060043610620001e95760003560e01c8063715018a6116200010d578063a0b335e311620000a3578063da525716116200007a578063da52571614620003dc578063e2386a5514620003ee578063f2fde38b14620003f8578063fabc1cbc146200040f57600080fd5b8063a0b335e314620003a2578063bdf2a43c14620003ac578063c968808614620003d257600080fd5b80638a364bc111620000e45780638a364bc1146200035b5780638a4adf2414620003655780638da5cb5b1462000379578063901a17ac146200038b57600080fd5b8063715018a614620003305780637c513c0f146200033a5780637c77b616146200034457600080fd5b80631f1713fc116200018357806332977c73116200015a57806332977c7314620002e25780634847cdc814620002ec5780635410bfc914620002f657806355b7851b146200030057600080fd5b80631f1713fc146200029d57806323845fb514620002b4578063310aefcf14620002cb57600080fd5b80630e519ef911620001c45780630e519ef9146200025b5780630ea90a12146200026557806310d25c51146200026f578063136439dd146200028657600080fd5b806309990a9614620001ee5780630c68ba21146200020b5780630cf0cfa61462000242575b600080fd5b620001f860725481565b6040519081526020015b60405180910390f35b620002316200021c3660046200110a565b60656020526000908152604090205460ff1681565b604051901515815260200162000202565b62000259620002533660046200112f565b62000426565b005b620001f8606d5481565b620001f8606a5481565b62000259620002803660046200110a565b62000558565b620002596200029736600462001167565b620005d6565b62000259620002ae3660046200110a565b6200065e565b62000259620002c536600462001181565b620006a2565b62000259620002dc366004620011c1565b6200072c565b620001f860735481565b620001f860695481565b620001f8606f5481565b620003176200031136600462001299565b62000813565b6040516001600160a01b03909116815260200162000202565b62000259620009b6565b620001f860715481565b620002596200035536600462001167565b620009f1565b620001f8606e5481565b60685462000317906001600160a01b031681565b6033546001600160a01b031662000317565b620002596200039c3660046200133d565b62000a3a565b620001f860705481565b62000231620003bd36600462001167565b60666020526000908152604090205460ff1681565b620001f8606c5481565b6067546001600160a01b031662000317565b620001f8606b5481565b62000259620004093660046200110a565b62000c21565b620002596200042036600462001167565b62000cc0565b600062000434600162000d3b565b905080156200044d576000805461ff0019166101001790555b6001600160a01b038316620004755760405163d92e233d60e01b815260040160405180910390fd5b6001600160a01b0382166200049d5760405163d92e233d60e01b815260040160405180910390fd5b620004a762000dd0565b620004b28262000558565b606880546001600160a01b0319166001600160a01b03851617905562127500606d556203f4806070556107d060725561c350606f556101f46071556103e8606e556109c46073556801a055690d9db80000606c55600f606b55801562000553576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb3847402498906020015b60405180910390a15b505050565b600062000566600162000d3b565b905080156200057f576000805461ff0019166101001790555b6200058a8262000e45565b8015620005d2576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb3847402498906020015b60405180910390a15b5050565b3360009081526065602052604090205460ff1662000606576040516282b42960e81b815260040160405180910390fd5b600081815260666020908152604091829020805460ff191660019081179091558251848152918201527f77f1fcfcce67dc392d64f842056d2ec06c80986c47c910f7e79c5b23a2738d7491015b60405180910390a150565b6033546001600160a01b03163314620006945760405162461bcd60e51b81526004016200068b9062001393565b60405180910390fd5b6200069f8162000e45565b50565b6033546001600160a01b03163314620006cf5760405162461bcd60e51b81526004016200068b9062001393565b6001600160a01b038216600081815260656020908152604091829020805460ff19168515159081179091558251938452908301527fd0b6b573d5442f7c29fd50d9735ae341581c25c6ed07748d50eda519f1ffa88a9101620005c9565b6033546001600160a01b03163314620007595760405162461bcd60e51b81526004016200068b9062001393565b6103e88311156200077d5760405163cd4e616760e01b815260040160405180910390fd5b6101f4811115620007a15760405163cd4e616760e01b815260040160405180910390fd5b6107d0821115620007c55760405163cd4e616760e01b815260040160405180910390fd5b606a839055606e829055606981905560408051848152602081018490529081018290527f9acd433700d7c453418ccd79bbddff52bbe5016e018b305f7275172df8c5d664906060016200054a565b6000620008216000620009f1565b6000620008366067546001600160a01b031690565b6001600160a01b0316036200085e5760405163d92e233d60e01b815260040160405180910390fd5b6068546001600160a01b031660006200087d85858c8c8c8c8c62000f0e565b6040516312b5ad0160e11b81526001600160a01b03808316600483015291925060009184169063256b5a02906024016020604051808303816000875af1158015620008cc573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620008f29190620013c8565b604051632142170760e11b81523360048201526001600160a01b038481166024830152604482018d9052919250908c16906342842e0e90606401600060405180830381600087803b1580156200094757600080fd5b505af11580156200095c573d6000803e3d6000fd5b50505050807f220044f302cf7fe455029c3b05386aa5d8020bdeb160379089b81b53ed95693d33848e8e8e8e8d8d604051620009a098979695949392919062001432565b60405180910390a2509998505050505050505050565b6033546001600160a01b03163314620009e35760405162461bcd60e51b81526004016200068b9062001393565b620009ef60006200102f565b565b60008181526066602052604090205460ff16801562000a1b57506033546001600160a01b03163314155b156200069f576040516313d0ff5960e31b815260040160405180910390fd5b6033546001600160a01b0316331462000a675760405162461bcd60e51b81526004016200068b9062001393565b6201518087108062000a7b5750606d548710155b1562000a9a5760405163568324c160e01b815260040160405180910390fd5b6249d40088118062000aae57506070548811155b1562000acd57604051639337d06760e01b815260040160405180910390fd5b606f54861062000af05760405163943260ad60e01b815260040160405180910390fd5b607254851162000b1357604051636db012dd60e01b815260040160405180910390fd5b6103e884118062000b245750606484105b1562000b43576040516315958edd60e21b815260040160405180910390fd5b61271083111562000b6757604051630d39c36360e11b815260040160405180910390fd5b600a81101562000b8a57604051630997be8760e21b815260040160405180910390fd5b606d88905560708790556072869055606f85905560718490556073839055606c829055606b8190556040805189815260208101899052908101879052606081018690526080810185905260a0810184905260c0810183905260e081018290527fa1927a9505419e03e733009247c2d2085634a33047cfe73787bcc983e823e311906101000160405180910390a15050505050505050565b6033546001600160a01b0316331462000c4e5760405162461bcd60e51b81526004016200068b9062001393565b6001600160a01b03811662000cb55760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016200068b565b6200069f816200102f565b6033546001600160a01b0316331462000ced5760405162461bcd60e51b81526004016200068b9062001393565b6000818152606660209081526040808320805460ff191690558051848152918201929092527f77f1fcfcce67dc392d64f842056d2ec06c80986c47c910f7e79c5b23a2738d74910162000653565b60008054610100900460ff161562000d87578160ff16600114801562000d605750303b155b62000d7f5760405162461bcd60e51b81526004016200068b90620014a3565b506000919050565b60005460ff80841691161062000db15760405162461bcd60e51b81526004016200068b90620014a3565b506000805460ff191660ff92909216919091179055600190565b919050565b600062000dde600162000d3b565b9050801562000df7576000805461ff0019166101001790555b62000e0162001081565b80156200069f576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200162000653565b6001600160a01b0381163b62000ec45760405162461bcd60e51b815260206004820152603960248201527f5570677261646561626c65426561636f6e3a206368696c6420696d706c656d6560448201527f6e746174696f6e206973206e6f74206120636f6e74726163740000000000000060648201526084016200068b565b606780546001600160a01b0319166001600160a01b0383169081179091556040517fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b90600090a250565b6000806386a777ab8989338a8a8a8a8a60405160240162000f37989796959493929190620014f1565b6040516020818303038152906040529060e01b6020820180516001600160e01b03838183161783525050505090506000308260405162000f7790620010e4565b62000f8492919062001559565b604051809103906000f08015801562000fa1573d6000803e3d6000fd5b509050806001600160a01b031663f2fde38b62000fc66033546001600160a01b031690565b6040516001600160e01b031960e084901b1681526001600160a01b039091166004820152602401600060405180830381600087803b1580156200100857600080fd5b505af11580156200101d573d6000803e3d6000fd5b50929c9b505050505050505050505050565b603380546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b600054610100900460ff16620010ab5760405162461bcd60e51b81526004016200068b9062001587565b620009ef600054610100900460ff16620010d95760405162461bcd60e51b81526004016200068b9062001587565b620009ef336200102f565b6108c680620015d383390190565b80356001600160a01b038116811462000dcb57600080fd5b6000602082840312156200111d57600080fd5b6200112882620010f2565b9392505050565b600080604083850312156200114357600080fd5b6200114e83620010f2565b91506200115e60208401620010f2565b90509250929050565b6000602082840312156200117a57600080fd5b5035919050565b600080604083850312156200119557600080fd5b620011a083620010f2565b915060208301358015158114620011b657600080fd5b809150509250929050565b600080600060608486031215620011d757600080fd5b505081359360208301359350604090920135919050565b634e487b7160e01b600052604160045260246000fd5b600082601f8301126200121657600080fd5b813567ffffffffffffffff80821115620012345762001234620011ee565b604051601f8301601f19908116603f011681019082821181831017156200125f576200125f620011ee565b816040528381528660208588010111156200127957600080fd5b836020870160208301376000602085830101528094505050505092915050565b600080600080600080600060e0888a031215620012b557600080fd5b620012c088620010f2565b96506020880135955060408801359450606088013593506080880135925060a088013567ffffffffffffffff80821115620012fa57600080fd5b620013088b838c0162001204565b935060c08a01359150808211156200131f57600080fd5b506200132e8a828b0162001204565b91505092959891949750929550565b600080600080600080600080610100898b0312156200135b57600080fd5b505086359860208801359850604088013597606081013597506080810135965060a0810135955060c0810135945060e0013592509050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b600060208284031215620013db57600080fd5b5051919050565b6000815180845260005b818110156200140a57602081850181015186830182015201620013ec565b818111156200141d576000602083870101525b50601f01601f19169290920160200192915050565b6001600160a01b038981168252888116602083015287166040820152606081018690526080810185905260a0810184905261010060c082018190526000906200147e83820186620013e2565b905082810360e0840152620014948185620013e2565b9b9a5050505050505050505050565b6020808252602e908201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160408201526d191e481a5b9a5d1a585b1a5e995960921b606082015260800190565b6000610100808352620015078184018c620013e2565b905082810360208401526200151d818b620013e2565b6001600160a01b03998a16604085015297909816606083015250608081019490945260a084019290925260c083015260e0909101529392505050565b6001600160a01b03831681526040602082018190526000906200157f90830184620013e2565b949350505050565b6020808252602b908201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960408201526a6e697469616c697a696e6760a81b60608201526080019056fe60806040526040516108c63803806108c68339810160408190526100229161042a565b61004d60017fa3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d516104ea565b600080516020610885833981519152146100695761006961050f565b610073828261007a565b505061058f565b61008d8261022660201b6100291760201c565b6100ec5760405162461bcd60e51b815260206004820152602560248201527f426561636f6e50726f78793a20626561636f6e206973206e6f74206120636f6e6044820152641d1c9858dd60da1b60648201526084015b60405180910390fd5b610160826001600160a01b031663da5257166040518163ffffffff1660e01b8152600401602060405180830381865afa15801561012d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101519190610525565b61022660201b6100291760201c565b6101d25760405162461bcd60e51b815260206004820152603460248201527f426561636f6e50726f78793a20626561636f6e20696d706c656d656e7461746960448201527f6f6e206973206e6f74206120636f6e747261637400000000000000000000000060648201526084016100e3565b6000805160206108858339815191528281558151156102215761021f6101f6610235565b836040518060600160405280602181526020016108a5602191396102b360201b6100381760201c565b505b505050565b6001600160a01b03163b151590565b600061024d6000805160206108858339815191525490565b6001600160a01b031663da5257166040518163ffffffff1660e01b8152600401602060405180830381865afa15801561028a573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102ae9190610525565b905090565b60606001600160a01b0384163b61031b5760405162461bcd60e51b815260206004820152602660248201527f416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f6044820152651b9d1c9858dd60d21b60648201526084016100e3565b600080856001600160a01b0316856040516103369190610540565b600060405180830381855af49150503d8060008114610371576040519150601f19603f3d011682016040523d82523d6000602084013e610376565b606091505b509092509050610387828286610393565b925050505b9392505050565b606083156103a257508161038c565b8251156103b25782518084602001fd5b8160405162461bcd60e51b81526004016100e3919061055c565b80516001600160a01b03811681146103e357600080fd5b919050565b634e487b7160e01b600052604160045260246000fd5b60005b83811015610419578181015183820152602001610401565b8381111561021f5750506000910152565b6000806040838503121561043d57600080fd5b610446836103cc565b60208401519092506001600160401b038082111561046357600080fd5b818501915085601f83011261047757600080fd5b815181811115610489576104896103e8565b604051601f8201601f19908116603f011681019083821181831017156104b1576104b16103e8565b816040528281528860208487010111156104ca57600080fd5b6104db8360208301602088016103fe565b80955050505050509250929050565b60008282101561050a57634e487b7160e01b600052601160045260246000fd5b500390565b634e487b7160e01b600052600160045260246000fd5b60006020828403121561053757600080fd5b61038c826103cc565b600082516105528184602087016103fe565b9190910192915050565b602081526000825180602084015261057b8160408501602087016103fe565b601f01601f19169190910160400192915050565b6102e78061059e6000396000f3fe60806040523661001357610011610017565b005b6100115b61002761002261011c565b6101ac565b565b6001600160a01b03163b151590565b60606001600160a01b0384163b6100a55760405162461bcd60e51b815260206004820152602660248201527f416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f6044820152651b9d1c9858dd60d21b60648201526084015b60405180910390fd5b600080856001600160a01b0316856040516100c09190610239565b600060405180830381855af49150503d80600081146100fb576040519150601f19603f3d011682016040523d82523d6000602084013e610100565b606091505b50915091506101108282866101d0565b925050505b9392505050565b60006101467fa3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d505490565b6001600160a01b031663da5257166040518163ffffffff1660e01b8152600401602060405180830381865afa158015610183573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101a79190610255565b905090565b3660008037600080366000845af43d6000803e8080156101cb573d6000f35b3d6000fd5b606083156101df575081610115565b8251156101ef5782518084602001fd5b8160405162461bcd60e51b815260040161009c919061027e565b60005b8381101561022457818101518382015260200161020c565b83811115610233576000848401525b50505050565b6000825161024b818460208701610209565b9190910192915050565b60006020828403121561026757600080fd5b81516001600160a01b038116811461011557600080fd5b602081526000825180602084015261029d816040850160208701610209565b601f01601f1916919091016040019291505056fea2646970667358221220f8229659447c762e7a87e74215956d58f6e585f6775523d0543037f8a20f99c664736f6c634300080d0033a3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d50426561636f6e50726f78793a2066756e6374696f6e2063616c6c206661696c6564a2646970667358221220db76f6185e961eab1fa3fa3e87ab09f5cbac46a4b22c157cc9844a342b5f5c0b64736f6c634300080d0033",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "childImplementation()": {
        "details": "Returns the current child implementation address."
      },
      "createVault(address,uint256,uint256,uint256,uint256,string,string)": {
        "params": {
          "_fee": "curator fee",
          "_listPrice": "the initial price of the NFT",
          "_name": "the desired name of the vault",
          "_nft": "the ERC721 token address",
          "_supply": "vault token supply",
          "_symbol": "the desired symbol of the vault",
          "_tokenId": "the uint256 id of the token"
        },
        "returns": {
          "_0": "vaultId"
        }
      },
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      },
      "upgradeChildTo(address)": {
        "details": "Upgrades the beacon to a new implementation. Emits an {Upgraded} event. Requirements: - msg.sender must be the owner of the contract. - `newChildImplementation` must be a contract."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "createVault(address,uint256,uint256,uint256,uint256,string,string)": {
        "notice": "the function to mint a fnftSingle"
      },
      "flashLoanFee()": {
        "notice": "flash loan fee basis point"
      },
      "governanceFee()": {
        "notice": "governance fee max"
      },
      "instantBuyMultiplier()": {
        "notice": "instant buy allowed if bid > MC * instantBuyMultiplier"
      },
      "liquidityThreshold()": {
        "notice": "minimum size of FNFT-ETH LP pool for TWAP to take effect"
      },
      "maxAuctionLength()": {
        "notice": "the maximum auction length"
      },
      "maxCuratorFee()": {
        "notice": "max curator fee"
      },
      "maxReserveFactor()": {
        "notice": "the max % increase over the initial"
      },
      "minAuctionLength()": {
        "notice": "the minimum auction length"
      },
      "minBidIncrease()": {
        "notice": "the % bid increase required for a new bid"
      },
      "minReserveFactor()": {
        "notice": "the max % decrease from the initial"
      },
      "minVotePercentage()": {
        "notice": "the % of tokens required to be voting for an auction to start"
      }
    },
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 274,
        "contract": "src/contracts/FNFTSingleFactory.sol:FNFTSingleFactory",
        "label": "_initialized",
        "offset": 0,
        "slot": "0",
        "type": "t_uint8"
      },
      {
        "astId": 277,
        "contract": "src/contracts/FNFTSingleFactory.sol:FNFTSingleFactory",
        "label": "_initializing",
        "offset": 1,
        "slot": "0",
        "type": "t_bool"
      },
      {
        "astId": 2270,
        "contract": "src/contracts/FNFTSingleFactory.sol:FNFTSingleFactory",
        "label": "__gap",
        "offset": 0,
        "slot": "1",
        "type": "t_array(t_uint256)50_storage"
      },
      {
        "astId": 10,
        "contract": "src/contracts/FNFTSingleFactory.sol:FNFTSingleFactory",
        "label": "_owner",
        "offset": 0,
        "slot": "51",
        "type": "t_address"
      },
      {
        "astId": 122,
        "contract": "src/contracts/FNFTSingleFactory.sol:FNFTSingleFactory",
        "label": "__gap",
        "offset": 0,
        "slot": "52",
        "type": "t_array(t_uint256)49_storage"
      },
      {
        "astId": 30164,
        "contract": "src/contracts/FNFTSingleFactory.sol:FNFTSingleFactory",
        "label": "isGuardian",
        "offset": 0,
        "slot": "101",
        "type": "t_mapping(t_address,t_bool)"
      },
      {
        "astId": 30168,
        "contract": "src/contracts/FNFTSingleFactory.sol:FNFTSingleFactory",
        "label": "isPaused",
        "offset": 0,
        "slot": "102",
        "type": "t_mapping(t_uint256,t_bool)"
      },
      {
        "astId": 26709,
        "contract": "src/contracts/FNFTSingleFactory.sol:FNFTSingleFactory",
        "label": "_childImplementation",
        "offset": 0,
        "slot": "103",
        "type": "t_address"
      },
      {
        "astId": 12543,
        "contract": "src/contracts/FNFTSingleFactory.sol:FNFTSingleFactory",
        "label": "vaultManager",
        "offset": 0,
        "slot": "104",
        "type": "t_contract(IVaultManager)23264"
      },
      {
        "astId": 12547,
        "contract": "src/contracts/FNFTSingleFactory.sol:FNFTSingleFactory",
        "label": "flashLoanFee",
        "offset": 0,
        "slot": "105",
        "type": "t_uint256"
      },
      {
        "astId": 12551,
        "contract": "src/contracts/FNFTSingleFactory.sol:FNFTSingleFactory",
        "label": "governanceFee",
        "offset": 0,
        "slot": "106",
        "type": "t_uint256"
      },
      {
        "astId": 12555,
        "contract": "src/contracts/FNFTSingleFactory.sol:FNFTSingleFactory",
        "label": "instantBuyMultiplier",
        "offset": 0,
        "slot": "107",
        "type": "t_uint256"
      },
      {
        "astId": 12559,
        "contract": "src/contracts/FNFTSingleFactory.sol:FNFTSingleFactory",
        "label": "liquidityThreshold",
        "offset": 0,
        "slot": "108",
        "type": "t_uint256"
      },
      {
        "astId": 12563,
        "contract": "src/contracts/FNFTSingleFactory.sol:FNFTSingleFactory",
        "label": "maxAuctionLength",
        "offset": 0,
        "slot": "109",
        "type": "t_uint256"
      },
      {
        "astId": 12567,
        "contract": "src/contracts/FNFTSingleFactory.sol:FNFTSingleFactory",
        "label": "maxCuratorFee",
        "offset": 0,
        "slot": "110",
        "type": "t_uint256"
      },
      {
        "astId": 12571,
        "contract": "src/contracts/FNFTSingleFactory.sol:FNFTSingleFactory",
        "label": "maxReserveFactor",
        "offset": 0,
        "slot": "111",
        "type": "t_uint256"
      },
      {
        "astId": 12575,
        "contract": "src/contracts/FNFTSingleFactory.sol:FNFTSingleFactory",
        "label": "minAuctionLength",
        "offset": 0,
        "slot": "112",
        "type": "t_uint256"
      },
      {
        "astId": 12579,
        "contract": "src/contracts/FNFTSingleFactory.sol:FNFTSingleFactory",
        "label": "minBidIncrease",
        "offset": 0,
        "slot": "113",
        "type": "t_uint256"
      },
      {
        "astId": 12583,
        "contract": "src/contracts/FNFTSingleFactory.sol:FNFTSingleFactory",
        "label": "minReserveFactor",
        "offset": 0,
        "slot": "114",
        "type": "t_uint256"
      },
      {
        "astId": 12587,
        "contract": "src/contracts/FNFTSingleFactory.sol:FNFTSingleFactory",
        "label": "minVotePercentage",
        "offset": 0,
        "slot": "115",
        "type": "t_uint256"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_uint256)49_storage": {
        "base": "t_uint256",
        "encoding": "inplace",
        "label": "uint256[49]",
        "numberOfBytes": "1568"
      },
      "t_array(t_uint256)50_storage": {
        "base": "t_uint256",
        "encoding": "inplace",
        "label": "uint256[50]",
        "numberOfBytes": "1600"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_contract(IVaultManager)23264": {
        "encoding": "inplace",
        "label": "contract IVaultManager",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_bool)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => bool)",
        "numberOfBytes": "32",
        "value": "t_bool"
      },
      "t_mapping(t_uint256,t_bool)": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => bool)",
        "numberOfBytes": "32",
        "value": "t_bool"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      },
      "t_uint8": {
        "encoding": "inplace",
        "label": "uint8",
        "numberOfBytes": "1"
      }
    }
  }
}